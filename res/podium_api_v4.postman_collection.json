{
	"info": {
		"_postman_id": "669891a0-1be2-4e5f-bafa-2ec36ad97536",
		"name": "Podium API - V4",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44965555",
		"_collection_link": "https://www.postman.com/podiumhq/podium-s-api-workspace/collection/r1msp04/podium-api-v4?action=share&source=collection_link&creator=44965555"
	},
	"item": [
		{
			"name": "APPOINTMENTS",
			"item": [
				{
					"name": "Appointment",
					"item": [
						{
							"name": "Create an appointment.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contactName\": \"in occaecat velit amet qui\",\n  \"contactPhoneNumber\": \"Excepteur minim nisi labore\",\n  \"datetime\": \"2015-01-23T23:50:07Z\",\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"assignedUserUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"durationMin\": -15679024,\n  \"note\": \"et ut\",\n  \"status\": \"unconfirmed\",\n  \"type\": \"in_person\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v4/appointments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"appointments"
									]
								},
								"description": "Create an appointment."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contactName\": \"in occaecat velit amet qui\",\n  \"contactPhoneNumber\": \"Excepteur minim nisi labore\",\n  \"datetime\": \"2015-01-23T23:50:07Z\",\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"assignedUserUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"durationMin\": -15679024,\n  \"note\": \"et ut\",\n  \"status\": \"unconfirmed\",\n  \"type\": \"in_person\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/appointments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"appointments"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"assignedUser\": {\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"contactName\": \"Excepteur ut\",\n    \"contactPhoneNumber\": \"enim laboris anim Ut pariatur\",\n    \"createdAt\": \"2015-01-23T23:50:07Z\",\n    \"datetime\": \"2015-01-23T23:50:07Z\",\n    \"durationMin\": -45576622,\n    \"location\": {\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"note\": \"est aliquip minim mollit\",\n    \"status\": \"no_show\",\n    \"type\": \"in_person\",\n    \"uid\": \"00000000-0000-0000-0000-000000000000\",\n    \"updatedAt\": \"2015-01-23T23:50:07Z\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contactName\": \"in occaecat velit amet qui\",\n  \"contactPhoneNumber\": \"Excepteur minim nisi labore\",\n  \"datetime\": \"2015-01-23T23:50:07Z\",\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"assignedUserUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"durationMin\": -15679024,\n  \"note\": \"et ut\",\n  \"status\": \"unconfirmed\",\n  \"type\": \"in_person\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/appointments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"appointments"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						}
					],
					"auth": {
						"type": "oauth2",
						"oauth2": [
							{
								"key": "client_authentication",
								"value": "body",
								"type": "string"
							},
							{
								"key": "accessTokenUrl",
								"value": "https://accounts.podium.com/oauth/token",
								"type": "string"
							},
							{
								"key": "authUrl",
								"value": "https://accounts.podium.com/oauth/authorize",
								"type": "string"
							},
							{
								"key": "addTokenTo",
								"value": "header",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "client_authentication",
						"value": "body",
						"type": "string"
					},
					{
						"key": "state",
						"value": "hold",
						"type": "string"
					},
					{
						"key": "clientSecret",
						"value": "<enter clientSecret from dev portal>",
						"type": "string"
					},
					{
						"key": "clientId",
						"value": "<enter clientID from dev portal>",
						"type": "string"
					},
					{
						"key": "accessTokenUrl",
						"value": "https://accounts.podium.com/oauth/token",
						"type": "string"
					},
					{
						"key": "authUrl",
						"value": "https://accounts.podium.com/oauth/authorize",
						"type": "string"
					},
					{
						"key": "scope",
						"value": "write_appointments",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "CAMPAIGNS",
			"item": [
				{
					"name": "Campaign Interaction",
					"item": [
						{
							"name": "List campaigns interactions",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/campaign_interactions?limit=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"campaign_interactions"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										}
									]
								},
								"description": "List of all the campaigns that the caller has access to. The campaigns are sorted by `updatedAt` date, in descending order\n\nCampaigns can be filtered by their status using the `status` query paramter"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v4/campaign_interactions?limit=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"campaign_interactions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"campaign\": {\n                \"uid\": \"00000000-0000-0000-0000-000000000000\"\n            },\n            \"contact\": {\n                \"uid\": \"5d4a00ca-0000-0000-0000-000000000000\"\n            },\n            \"conversation\": {\n                \"uid\": null\n            },\n            \"createdAt\": \"2022-07-11T21:14:14.000000Z\",\n            \"interactionType\": \"queued\",\n            \"location\": {\n                \"uid\": \"00000000-0000-0000-0000-c9003e35685e\"\n            },\n            \"uid\": \"00000000-0000-0000-0000-bcdf2e4b6ca7\",\n            \"updatedAt\": \"2022-07-11T21:14:14.000000Z\"\n        },\n        {\n            \"campaign\": {\n                \"uid\": \"00000000-0000-0000-0000-000000000000\"\n            },\n            \"contact\": {\n                \"uid\": \"5d4a5300-0000-0000-0000-000000000000\"\n            },\n            \"conversation\": {\n                \"uid\": \"00000000-0000-0000-0000-ea3f1a988769\"\n            },\n            \"createdAt\": \"2022-05-10T15:49:37.000000Z\",\n            \"interactionType\": \"sent\",\n            \"location\": {\n                \"uid\": \"d5e00b9a-0000-0000-0000-000000000000\"\n            },\n            \"uid\": \"00000000-0000-0000-0000-3f716f748369\",\n            \"updatedAt\": \"2022-05-10T15:49:37.000000Z\"\n        }\n    ],\n    \"metadata\": {\n        \"nextCursor\": \"118c10000000000007dfd81d0000000000003eced043000000000000\",\n        \"previousCursor\": null,\n        \"totalItems\": null,\n        \"url\": \"/v4/campaign_interactions\"\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Campaign",
					"item": [
						{
							"name": "List all campaigns.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/campaigns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"campaigns"
									]
								},
								"description": "List of all the campaigns that the caller has access to. The campaigns are sorted by `updatedAt` date, in descending order\n\nCampaigns can be filtered by their status using the `status` query paramter"
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/campaigns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"campaigns"
											],
											"query": [
												{
													"key": "status",
													"value": null,
													"description": "ACTIVE/INACTIVE",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n            \"createdAt\": \"2022-07-11T20:09:02Z\",\n            \"endedAt\": null,\n            \"locations\": [\n                {\n                    \"uid\": \"00000000-0000-0000-0000-000000000000\"\n                }\n            ],\n            \"message\": null,\n            \"name\": \"Made from api\",\n            \"organization\": {\n                \"uid\": \"00000000-0000-0000-0000-000000000000\"\n            },\n            \"startedAt\": \"2022-07-11T20:09:02Z\",\n            \"status\": \"ACTIVE\",\n            \"uid\": \"00000000-0000-0000-0000-000000000000\",\n            \"updatedAt\": \"2022-07-11T20:09:02Z\"\n        },\n        {\n            \"createdAt\": \"2022-02-11T17:44:30Z\",\n            \"endedAt\": null,\n            \"locations\": [\n                {\n                    \"uid\": \"00000000-0000-0000-0000-000000000000\"\n                },\n                {\n                    \"uid\": \"10000000-0000-0000-0000-000000000000\"\n                },\n                {\n                    \"uid\": \"20000000-0000-0000-0000-000000000000\"\n                },\n                {\n                    \"uid\": \"30000000-0000-0000-0000-000000000000\"\n                }\n            ],\n            \"message\": \"Hey :contact:, guess what? We’re textable now! 📲 🎉 Save our contact info, and text this number whenever you need to reach us. Thanks for supporting :location:!\",\n            \"name\": \"Textable\",\n            \"organization\": {\n                \"uid\": \"00000000-0000-0000-0000-000000000000\"\n            },\n            \"startedAt\": \"2022-02-11T17:44:30Z\",\n            \"status\": \"ACTIVE\",\n            \"uid\": \"00000000-0000-0000-0000-000000000000\",\n            \"updatedAt\": \"2022-02-11T17:44:30Z\"\n        }\n  ],\n  \"metadata\": {\n    \"url\": \"/v4/campaigns\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/campaigns?status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"campaigns"
											],
											"query": [
												{
													"key": "status",
													"value": null,
													"description": "ACTIVE"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"unauthorized\",\n    \"message\": \"ID token has invalid signature\",\n    \"moreInfo\": \"https://docs.podium.com/docs/errors#unauthorized\"\n}"
								}
							]
						},
						{
							"name": "Create a campaign",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"includeActiveConversations\": false,\n    \"locations\": [\"00000000-0000-0000-0000-000000000000\"],\n    \"recentlySentSubscriberOverride\": false,\n    \"name\": \"Podium API Sample\",\n    \"status\": \"DRAFT\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v4/campaigns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"campaigns"
									]
								},
								"description": "List of all the campaigns that the caller has access to. The campaigns are sorted by `updatedAt` date, in descending order\n\nCampaigns can be filtered by their status using the `status` query paramter"
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/campaigns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"campaigns"
											],
											"query": [
												{
													"key": "status",
													"value": null,
													"description": "ACTIVE/INACTIVE",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"createdAt\": \"2022-08-03T22:27:57Z\",\n        \"endedAt\": null,\n        \"locations\": [\n            {\n                \"uid\": \"30000000-0000-0000-0000-000000000000\"\n            }\n        ],\n        \"message\": null,\n        \"name\": \"Podium API Sample\",\n        \"organization\": {\n            \"uid\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        \"startedAt\": null,\n        \"status\": \"DRAFT\",\n        \"uid\": \"00000000-0000-0000-0000-000000000000\",\n        \"updatedAt\": \"2022-08-03T22:27:57Z\"\n    },\n    \"metadata\": {\n        \"url\": \"/v4/campaigns\"\n    }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/campaigns?status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"campaigns"
											],
											"query": [
												{
													"key": "status",
													"value": null,
													"description": "ACTIVE"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"unauthorized\",\n    \"message\": \"ID token has invalid signature\",\n    \"moreInfo\": \"https://docs.podium.com/docs/errors#unauthorized\"\n}"
								}
							]
						},
						{
							"name": "Delete a campaign",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"includeActiveConversations\": false,\n    \"locations\": [\"00000000-0000-0000-0000-000000000000\"],\n    \"recentlySentSubscriberOverride\": false,\n    \"name\": \"Podium API Sample\",\n    \"status\": \"DRAFT\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v4/campaigns/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"campaigns",
										"00000000-0000-0000-0000-000000000000"
									]
								},
								"description": "List of all the campaigns that the caller has access to. The campaigns are sorted by `updatedAt` date, in descending order\n\nCampaigns can be filtered by their status using the `status` query paramter"
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/campaigns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"campaigns"
											],
											"query": [
												{
													"key": "status",
													"value": null,
													"description": "ACTIVE/INACTIVE",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"createdAt\": \"2022-08-03T22:27:57Z\",\n        \"endedAt\": null,\n        \"locations\": [\n            {\n                \"uid\": \"30000000-0000-0000-0000-000000000000\"\n            }\n        ],\n        \"message\": null,\n        \"name\": \"Podium API Sample\",\n        \"organization\": {\n            \"uid\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        \"startedAt\": null,\n        \"status\": \"DRAFT\",\n        \"uid\": \"00000000-0000-0000-0000-000000000000\",\n        \"updatedAt\": \"2022-08-03T22:27:57Z\"\n    },\n    \"metadata\": {\n        \"url\": \"/v4/campaigns\"\n    }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/campaigns?status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"campaigns"
											],
											"query": [
												{
													"key": "status",
													"value": null,
													"description": "ACTIVE"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"unauthorized\",\n    \"message\": \"ID token has invalid signature\",\n    \"moreInfo\": \"https://docs.podium.com/docs/errors#unauthorized\"\n}"
								}
							]
						},
						{
							"name": "Get a campaign",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"includeActiveConversations\": false,\n    \"locations\": [\"00000000-0000-0000-0000-000000000000\"],\n    \"recentlySentSubscriberOverride\": false,\n    \"name\": \"Podium API Sample\",\n    \"status\": \"DRAFT\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v4/campaigns/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"campaigns",
										"00000000-0000-0000-0000-000000000000"
									]
								},
								"description": "List of all the campaigns that the caller has access to. The campaigns are sorted by `updatedAt` date, in descending order\n\nCampaigns can be filtered by their status using the `status` query paramter"
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/campaigns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"campaigns"
											],
											"query": [
												{
													"key": "status",
													"value": null,
													"description": "ACTIVE/INACTIVE",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"createdAt\": \"2022-08-03T22:27:57Z\",\n        \"endedAt\": null,\n        \"locations\": [\n            {\n                \"uid\": \"30000000-0000-0000-0000-000000000000\"\n            }\n        ],\n        \"message\": null,\n        \"name\": \"Podium API Sample\",\n        \"organization\": {\n            \"uid\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        \"startedAt\": null,\n        \"status\": \"DRAFT\",\n        \"uid\": \"00000000-0000-0000-0000-000000000000\",\n        \"updatedAt\": \"2022-08-03T22:27:57Z\"\n    },\n    \"metadata\": {\n        \"url\": \"/v4/campaigns/00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/campaigns?status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"campaigns"
											],
											"query": [
												{
													"key": "status",
													"value": null,
													"description": "ACTIVE"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"unauthorized\",\n    \"message\": \"ID token has invalid signature\",\n    \"moreInfo\": \"https://docs.podium.com/docs/errors#unauthorized\"\n}"
								}
							]
						},
						{
							"name": "Update a campaign",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"includeActiveConversations\": false,\n    \"locations\": [\"00000000-0000-0000-0000-000000000000\"],\n    \"recentlySentSubscriberOverride\": false,\n    \"name\": \"Made from API - updated\",\n    \"status\": \"ACTIVE\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v4/campaigns/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"campaigns",
										"00000000-0000-0000-0000-000000000000"
									]
								},
								"description": "List of all the campaigns that the caller has access to. The campaigns are sorted by `updatedAt` date, in descending order\n\nCampaigns can be filtered by their status using the `status` query paramter"
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/campaigns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"campaigns"
											],
											"query": [
												{
													"key": "status",
													"value": null,
													"description": "ACTIVE/INACTIVE",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"createdAt\": \"2022-07-11T20:09:02Z\",\n        \"endedAt\": null,\n        \"locations\": [\n            {\n                \"uid\": \"00000000-0000-0000-0000-000000000000\"\n            }\n        ],\n        \"message\": null,\n        \"name\": \"Made from API - updated\",\n        \"organization\": {\n            \"uid\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        \"startedAt\": \"2022-07-11T20:09:02Z\",\n        \"status\": \"ACTIVE\",\n        \"uid\": \"00000000-0000-0000-0000-000000000000\",\n        \"updatedAt\": \"2022-07-11T20:09:02Z\"\n    },\n    \"metadata\": {\n        \"url\": \"/v4/campaigns/00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/campaigns?status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"campaigns"
											],
											"query": [
												{
													"key": "status",
													"value": null,
													"description": "ACTIVE"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"unauthorized\",\n    \"message\": \"ID token has invalid signature\",\n    \"moreInfo\": \"https://docs.podium.com/docs/errors#unauthorized\"\n}"
								}
							]
						},
						{
							"name": "Create a message for a given campaign",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channelIdentifier\": \"email@email.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v4/campaigns/00000000-0000-0000-0000-000000000000/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"campaigns",
										"00000000-0000-0000-0000-000000000000",
										"messages"
									]
								},
								"description": "Send a message through a campaign."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channelIdentifier\": \"email@email.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/campaigns/:uid/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"campaigns",
												":uid",
												"messages"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for campaign."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"attachmentUrl\": \"https://www.podium.com/\",\n    \"body\": \"Hello there.\",\n    \"contact\": {\n      \"externalIdentifier\": \"123-abc\",\n      \"name\": \"Joe Orange\",\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"contactName\": \"Joe Orange\",\n    \"conversation\": {\n      \"assignedUserUid\": \"00000000-0000-0000-0000-000000000000\",\n      \"channel\": {\n        \"identifier\": \"email@email.com\",\n        \"type\": \"email\"\n      },\n      \"startedAt\": \"2015-01-23T23:50:07Z\",\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"createdAt\": \"2015-01-23T23:50:07Z\",\n    \"failureReason\": \"Attempted to send SMS to a landline.\",\n    \"location\": {\n      \"organizationUid\": \"00000000-0000-0000-0000-000000000000\",\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"sender\": {\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"senderUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"uid\": \"00000000-0000-0000-0000-000000000000\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channelIdentifier\": \"email@email.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/campaigns/:uid/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"campaigns",
												":uid",
												"messages"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for campaign."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Message",
					"item": [
						{
							"name": "Create message for campaign",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": \"Just a reminder that your appointment is today!\",\n  \"channel\": {\n    \"identifier\": \"email@email.com\",\n    \"type\": \"email\"\n  },\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"contactName\": \"Joe Orange\",\n  \"senderName\": \"Bot1234\",\n  \"subject\": \"Appointment reminder\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v4/campaigns/{uid}/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"campaigns",
										"{uid}",
										"messages"
									]
								},
								"description": "Send a message. A message can only be sent on behalf of a user if they have the necessary permissions to send\nmessages in: conversations assigned to them, conversations assigned to others, and unassigned conversations.\n"
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"body\": \"Just a reminder that your appointment is today!\",\n  \"channel\": {\n    \"identifier\": \"email@email.com\",\n    \"type\": \"email\"\n  },\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"contactName\": \"Joe Orange\",\n  \"senderName\": \"Bot1234\",\n  \"subject\": \"Appointment reminder\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"attachmentUrl\": \"https://www.podium.com/\",\n    \"body\": \"Hello there.\",\n    \"contact\": {\n      \"externalIdentifier\": \"123-abc\",\n      \"name\": \"Joe Orange\",\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"contactName\": \"Joe Orange\",\n    \"conversation\": {\n      \"assignedUserUid\": \"00000000-0000-0000-0000-000000000000\",\n      \"channel\": {\n        \"identifier\": \"email@email.com\",\n        \"type\": \"email\"\n      },\n      \"startedAt\": \"2015-01-23T23:50:07Z\",\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"createdAt\": \"2015-01-23T23:50:07Z\",\n    \"failureReason\": \"Attempted to send SMS to a landline.\",\n    \"location\": {\n      \"organizationUid\": \"00000000-0000-0000-0000-000000000000\",\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"sender\": {\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"senderUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"uid\": \"00000000-0000-0000-0000-000000000000\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"body\": \"Just a reminder that your appointment is today!\",\n  \"channel\": {\n    \"identifier\": \"email@email.com\",\n    \"type\": \"email\"\n  },\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"contactName\": \"Joe Orange\",\n  \"senderName\": \"Bot1234\",\n  \"subject\": \"Appointment reminder\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"messages"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						}
					],
					"auth": {
						"type": "oauth2",
						"oauth2": [
							{
								"key": "client_authentication",
								"value": "body",
								"type": "string"
							},
							{
								"key": "scope",
								"value": "write_campaign_messages write_messages",
								"type": "string"
							},
							{
								"key": "accessTokenUrl",
								"value": "https://accounts.podium.com/oauth/token",
								"type": "string"
							},
							{
								"key": "authUrl",
								"value": "https://accounts.podium.com/oauth/authorize",
								"type": "string"
							},
							{
								"key": "addTokenTo",
								"value": "header",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "client_authentication",
						"value": "body",
						"type": "string"
					},
					{
						"key": "clientId",
						"value": "<enter clientID from dev portal>",
						"type": "string"
					},
					{
						"key": "clientSecret",
						"value": "<enter clientSecret from dev portal>",
						"type": "string"
					},
					{
						"key": "state",
						"value": "hold",
						"type": "string"
					},
					{
						"key": "useBrowser",
						"value": true,
						"type": "boolean"
					},
					{
						"key": "scope",
						"value": "read_campaigns write_campaigns",
						"type": "string"
					},
					{
						"key": "authUrl",
						"value": "https://accounts.podium.com/oauth/authorize",
						"type": "string"
					},
					{
						"key": "accessTokenUrl",
						"value": "https://accounts.podium.com/oauth/token",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "CONTACTS",
			"item": [
				{
					"name": "Contact Attribute",
					"item": [
						{
							"name": "List contact attributes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/contact_attributes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"contact_attributes"
									]
								},
								"description": "Get a contact with a conversation uid, email, or phone number."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/contact_attributes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"contact_attributes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"createdAt\": \"2022-06-30T16:44:29.000000Z\",\n            \"dataType\": \"STRING\",\n            \"isEncrypted\": false,\n            \"label\": \"Link\",\n            \"ownerResource\": {\n                \"type\": \"ORGANIZATION\",\n                \"uid\": \"00000000-0000-0000-0000-000000000000\"\n            },\n            \"uid\": \"00000000-0000-0000-0000-000000000000\",\n            \"updatedAt\": \"2022-06-30T16:44:29.000000Z\"\n        }\n    ],\n    \"metadata\": {\n        \"url\": \"/v4/contact_attributes\"\n    }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "nisi dolor sed ullamco",
													"description": "(Required) Conversation uid, phone number, or email to identify the contact. Phone number should be formatted as '+15555555555'"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"unauthorized\",\n    \"message\": \"ID token has invalid signature\",\n    \"moreInfo\": \"https://docs.podium.com/docs/errors#unauthorized\"\n}"
								}
							]
						},
						{
							"name": "Create a contact attribute",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"isEncrypted\": true,\n    \"dataType\": \"BOOLEAN\",\n    \"label\": \"Api-test\",\n    \"ownerResourceType\": \"ORGANIZATION\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v4/contact_attributes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"contact_attributes"
									]
								},
								"description": "Get a contact with a conversation uid, email, or phone number."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/contact_attributes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"contact_attributes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"createdAt\": \"2022-08-03T22:52:16.237442Z\",\n        \"dataType\": \"BOOLEAN\",\n        \"isEncrypted\": true,\n        \"label\": \"Api-test\",\n        \"ownerResource\": {\n            \"type\": \"ORGANIZATION\",\n            \"uid\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        \"uid\": \"00000000-0000-0000-0000-000000000000\",\n        \"updatedAt\": \"2022-08-03T22:52:16.237442Z\"\n    },\n    \"metadata\": {\n        \"url\": \"/v4/contact_attributes\"\n    }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "nisi dolor sed ullamco",
													"description": "(Required) Conversation uid, phone number, or email to identify the contact. Phone number should be formatted as '+15555555555'"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"unauthorized\",\n    \"message\": \"ID token has invalid signature\",\n    \"moreInfo\": \"https://docs.podium.com/docs/errors#unauthorized\"\n}"
								}
							]
						},
						{
							"name": "Create a contact attribute Copy",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"isEncrypted\": true,\n    \"dataType\": \"BOOLEAN\",\n    \"label\": \"Api-test\",\n    \"ownerResourceType\": \"ORGANIZATION\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v4/contact_attributes/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"contact_attributes",
										"00000000-0000-0000-0000-000000000000"
									]
								},
								"description": "Get a contact with a conversation uid, email, or phone number."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/contact_attributes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"contact_attributes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"createdAt\": \"2022-08-03T22:52:16.237442Z\",\n        \"dataType\": \"BOOLEAN\",\n        \"isEncrypted\": true,\n        \"label\": \"Api-test\",\n        \"ownerResource\": {\n            \"type\": \"ORGANIZATION\",\n            \"uid\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        \"uid\": \"00000000-0000-0000-0000-000000000000\",\n        \"updatedAt\": \"2022-08-03T22:52:16.237442Z\"\n    },\n    \"metadata\": {\n        \"url\": \"/v4/contact_attributes/00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "nisi dolor sed ullamco",
													"description": "(Required) Conversation uid, phone number, or email to identify the contact. Phone number should be formatted as '+15555555555'"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"unauthorized\",\n    \"message\": \"ID token has invalid signature\",\n    \"moreInfo\": \"https://docs.podium.com/docs/errors#unauthorized\"\n}"
								}
							]
						},
						{
							"name": "Gets a contact attribute by uid",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/contact_attributes/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"contact_attributes",
										"00000000-0000-0000-0000-000000000000"
									]
								},
								"description": "Get a contact with a conversation uid, email, or phone number."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/contact_attributes/00000000-0000-0000-0000-000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"contact_attributes",
												"00000000-0000-0000-0000-000000000000"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"createdAt\": \"2022-06-30T16:44:29.000000Z\",\n        \"dataType\": \"STRING\",\n        \"isEncrypted\": false,\n        \"label\": \"Link\",\n        \"ownerResource\": {\n            \"type\": \"ORGANIZATION\",\n            \"uid\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        \"uid\": \"00000000-0000-0000-0000-000000000000\",\n        \"updatedAt\": \"2022-06-30T16:44:29.000000Z\"\n    },\n    \"metadata\": {\n        \"url\": \"/v4/contact_attributes/00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "nisi dolor sed ullamco",
													"description": "(Required) Conversation uid, phone number, or email to identify the contact. Phone number should be formatted as '+15555555555'"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"unauthorized\",\n    \"message\": \"ID token has invalid signature\",\n    \"moreInfo\": \"https://docs.podium.com/docs/errors#unauthorized\"\n}"
								}
							]
						},
						{
							"name": "Gets a contact attribute by uid Copy",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"isEncrypted\": false,\n    \"dataType\": \"BOOLEAN\",\n    \"label\": \"Link\",\n    \"ownerResourceType\": \"ORGANIZATION\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v4/contact_attributes/00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"contact_attributes",
										"00000000-0000-0000-0000-000000000000"
									]
								},
								"description": "Get a contact with a conversation uid, email, or phone number."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/contact_attributes/00000000-0000-0000-0000-000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"contact_attributes",
												"00000000-0000-0000-0000-000000000000"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"createdAt\": \"2022-06-30T16:44:29.000000Z\",\n        \"dataType\": \"BOOLEAN\",\n        \"isEncrypted\": false,\n        \"label\": \"Link\",\n        \"ownerResource\": {\n            \"type\": \"ORGANIZATION\",\n            \"uid\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        \"uid\": \"00000000-0000-0000-0000-000000000000\",\n        \"updatedAt\": \"2022-08-03T23:04:31.557901Z\"\n    },\n    \"metadata\": {\n        \"url\": \"/v4/contact_attributes/00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "nisi dolor sed ullamco",
													"description": "(Required) Conversation uid, phone number, or email to identify the contact. Phone number should be formatted as '+15555555555'"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"unauthorized\",\n    \"message\": \"ID token has invalid signature\",\n    \"moreInfo\": \"https://docs.podium.com/docs/errors#unauthorized\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Contact Tag",
					"item": [
						{
							"name": "List tags for organization",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.podium.com/v4/contact_tags",
									"protocol": "https",
									"host": [
										"api",
										"podium",
										"com"
									],
									"path": [
										"v4",
										"contact_tags"
									]
								}
							},
							"response": [
								{
									"name": "List tags for organization",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.podium.com/v4/contact_tags",
											"protocol": "https",
											"host": [
												"api",
												"podium",
												"com"
											],
											"path": [
												"v4",
												"contact_tags"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"createdAt\": \"2022-07-25T15:12:11.000000Z\",\n            \"description\": \"Utah\",\n            \"label\": \"Utah\",\n            \"organization\": {\n                \"uid\": \"00000000-0000-0000-0000-000000000000\"\n            },\n            \"uid\": \"00000000-0000-0000-0000-000000000000\",\n            \"updatedAt\": \"2022-07-25T15:12:11.000000Z\"\n        },\n        {\n            \"createdAt\": \"2022-07-25T15:12:10.000000Z\",\n            \"description\": \"Podium\",\n            \"label\": \"Podium\",\n            \"organization\": {\n                \"uid\": \"00000000-0000-0000-0000-000000000000\"\n            },\n            \"uid\": \"00000000-0000-0000-0000-000000000000\",\n            \"updatedAt\": \"2022-07-25T15:12:10.000000Z\"\n        }\n    ],\n    \"metadata\": {\n        \"url\": \"/v4/contact_tags\"\n    }\n}"
								},
								{
									"name": "Error response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "nisi dolor sed ullamco",
													"description": "(Required) Conversation uid, phone number, or email to identify the contact. Phone number should be formatted as '+15555555555'"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"unauthorized\",\n    \"message\": \"ID token has invalid signature\",\n    \"moreInfo\": \"https://docs.podium.com/docs/errors#unauthorized\"\n}"
								}
							]
						},
						{
							"name": "Create a contat tag for org",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Podium API\",\n    \"label\": \"priority\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.podium.com/v4/contact_tags",
									"protocol": "https",
									"host": [
										"api",
										"podium",
										"com"
									],
									"path": [
										"v4",
										"contact_tags"
									]
								}
							},
							"response": [
								{
									"name": "List tags for organization",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.podium.com/v4/contact_tags",
											"protocol": "https",
											"host": [
												"api",
												"podium",
												"com"
											],
											"path": [
												"v4",
												"contact_tags"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"createdAt\": \"2022-08-04T02:11:51.794018Z\",\n        \"description\": \"Podium API\",\n        \"label\": \"priority\",\n        \"organization\": {\n            \"uid\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        \"uid\": \"00000000-0000-0000-0000-000000000000\",\n        \"updatedAt\": \"2022-08-04T02:11:51.794018Z\"\n    },\n    \"metadata\": {\n        \"url\": \"/v4/contact_tags\"\n    }\n}"
								},
								{
									"name": "Error response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "nisi dolor sed ullamco",
													"description": "(Required) Conversation uid, phone number, or email to identify the contact. Phone number should be formatted as '+15555555555'"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"unauthorized\",\n    \"message\": \"ID token has invalid signature\",\n    \"moreInfo\": \"https://docs.podium.com/docs/errors#unauthorized\"\n}"
								}
							]
						},
						{
							"name": "Get a contact tag for org",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.podium.com/v4/contact_tags/00000000-0000-0000-0000-000000000000",
									"protocol": "https",
									"host": [
										"api",
										"podium",
										"com"
									],
									"path": [
										"v4",
										"contact_tags",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"response": [
								{
									"name": "List tags for organization",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.podium.com/v4/contact_tags/00000000-0000-0000-0000-000000000000",
											"protocol": "https",
											"host": [
												"api",
												"podium",
												"com"
											],
											"path": [
												"v4",
												"contact_tags",
												"00000000-0000-0000-0000-000000000000"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"createdAt\": \"2022-08-04T02:11:52.000000Z\",\n        \"description\": \"Podium API\",\n        \"label\": \"priority\",\n        \"organization\": {\n            \"uid\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        \"uid\": \"00000000-0000-0000-0000-000000000000\",\n        \"updatedAt\": \"2022-08-04T02:11:52.000000Z\"\n    },\n    \"metadata\": {\n        \"url\": \"/v4/contact_tags/00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								{
									"name": "Error response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "nisi dolor sed ullamco",
													"description": "(Required) Conversation uid, phone number, or email to identify the contact. Phone number should be formatted as '+15555555555'"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"unauthorized\",\n    \"message\": \"ID token has invalid signature\",\n    \"moreInfo\": \"https://docs.podium.com/docs/errors#unauthorized\"\n}"
								}
							]
						},
						{
							"name": "Get a contact tag for org Copy",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"High priority contacts\",\n    \"label\": \"priority\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.podium.com/v4/contact_tags/00000000-0000-0000-0000-000000000000",
									"protocol": "https",
									"host": [
										"api",
										"podium",
										"com"
									],
									"path": [
										"v4",
										"contact_tags",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"response": [
								{
									"name": "List tags for organization",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.podium.com/v4/contact_tags/00000000-0000-0000-0000-000000000000",
											"protocol": "https",
											"host": [
												"api",
												"podium",
												"com"
											],
											"path": [
												"v4",
												"contact_tags",
												"00000000-0000-0000-0000-000000000000"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"createdAt\": \"2022-08-04T02:11:52.000000Z\",\n        \"description\": \"Podium API - updated\",\n        \"label\": \"priority\",\n        \"organization\": {\n            \"uid\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        \"uid\": \"00000000-0000-0000-0000-000000000000\",\n        \"updatedAt\": \"2022-08-04T02:19:28.152497Z\"\n    },\n    \"metadata\": {\n        \"url\": \"/v4/contact_tags/00000000-0000-0000-0000-000000000000\"\n    }\n}"
								},
								{
									"name": "Error response",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "nisi dolor sed ullamco",
													"description": "(Required) Conversation uid, phone number, or email to identify the contact. Phone number should be formatted as '+15555555555'"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"code\": \"unauthorized\",\n    \"message\": \"ID token has invalid signature\",\n    \"moreInfo\": \"https://docs.podium.com/docs/errors#unauthorized\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Contact",
					"item": [
						{
							"name": "List all contacts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.podium.com/v4/contacts",
									"protocol": "https",
									"host": [
										"api",
										"podium",
										"com"
									],
									"path": [
										"v4",
										"contacts"
									]
								}
							},
							"response": [
								{
									"name": "List all contacts",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.podium.com/v4/contacts",
											"protocol": "https",
											"host": [
												"api",
												"podium",
												"com"
											],
											"path": [
												"v4",
												"contacts"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"data\": [\n        {\n            \"attributes\": [],\n            \"conversations\": [\n                {\n                    \"uid\": \"00000000-0000-0000-0000-000000000000\"\n                }\n            ],\n            \"createdAt\": \"2021-07-02T17:20:38.000000Z\",\n            \"emails\": [],\n            \"locations\": [\n                {\n                    \"uid\": \"00000000-0000-0000-0000-000000000000\"\n                }\n            ],\n            \"name\": \"John Doe\",\n            \"organization\": null,\n            \"phoneNumbers\": [\n                \"+181111111111\"\n            ],\n            \"tags\": [],\n            \"uid\": null,\n            \"updatedAt\": \"2022-03-09T10:54:14.103749Z\"\n        },\n        {\n            \"attributes\": [],\n            \"conversations\": [\n                {\n                    \"uid\": \"00000000-0000-0000-0000-000000000000\"\n                }\n            ],\n            \"createdAt\": \"2021-12-07T19:42:02.452032Z\",\n            \"emails\": [],\n            \"locations\": [\n                {\n                    \"uid\": \"00000000-0000-0000-0000-000000000000\"\n                }\n            ],\n            \"name\": null,\n            \"organization\": null,\n            \"phoneNumbers\": [\n                \"+12787777777\"\n            ],\n            \"tags\": [],\n            \"uid\": null,\n            \"updatedAt\": \"2022-02-13T17:44:15.433680Z\"\n        },\n        {\n            \"attributes\": [],\n            \"conversations\": [],\n            \"createdAt\": \"2022-06-06T18:32:48.248260Z\",\n            \"emails\": [\n                \"example@example.com\"\n            ],\n            \"locations\": [\n                {\n                    \"uid\": \"00000000-0000-0000-0000-000000000000\"\n                }\n            ],\n            \"name\": \"Pat Doe\",\n            \"organization\": null,\n            \"phoneNumbers\": [],\n            \"tags\": [],\n            \"uid\": null,\n            \"updatedAt\": \"2022-06-06T18:32:48.248260Z\"\n        },\n        {\n            \"attributes\": [],\n            \"conversations\": [],\n            \"createdAt\": \"2022-06-06T18:32:43.302833Z\",\n            \"emails\": [\n                \"example@example.com\"\n            ],\n            \"locations\": [\n                {\n                    \"uid\": \"00000000-0000-0000-0000-000000000000\"\n                }\n            ],\n            \"name\": \"Hane Zand\",\n            \"organization\": null,\n            \"phoneNumbers\": [],\n            \"tags\": [],\n            \"uid\": null,\n            \"updatedAt\": \"2022-06-06T18:32:43.302833Z\"\n        }\n    ],\n    \"metadata\": {\n        \"nextCursor\": \"WyIwMWE3ZDRlOS0xOTNiLT==\",\n        \"url\": \"/v4/contacts\"\n    }\n}"
								}
							]
						},
						{
							"name": "Create contact",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"locations\": [\"00000000-0000-0000-0000-000000000000\"],\n    \"email\": \"john.doe@podium.com\",\n    \"name\": \"John Doe\",\n    \"phoneNumber\": \"+18011117888\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.podium.com/v4/contacts",
									"protocol": "https",
									"host": [
										"api",
										"podium",
										"com"
									],
									"path": [
										"v4",
										"contacts"
									]
								}
							},
							"response": [
								{
									"name": "Create a contact",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.podium.com/v4/contacts",
											"protocol": "https",
											"host": [
												"api",
												"podium",
												"com"
											],
											"path": [
												"v4",
												"contacts"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"identifier\": \"+18011117888\"\n    },\n    \"metadata\": {\n        \"url\": \"/v4/contacts\"\n    }\n}"
								}
							]
						},
						{
							"name": "Create contact",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.podium.com/v4/contacts/john.doe@podium.com",
									"protocol": "https",
									"host": [
										"api",
										"podium",
										"com"
									],
									"path": [
										"v4",
										"contacts",
										"john.doe@podium.com"
									]
								}
							},
							"response": [
								{
									"name": "Delete a contact",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.podium.com/v4/contacts",
											"protocol": "https",
											"host": [
												"api",
												"podium",
												"com"
											],
											"path": [
												"v4",
												"contacts"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"identifier\": \"john.doe@podium.com\"\n    },\n    \"metadata\": {\n        \"url\": \"/v4/contacts/john.doe@podium.com\"\n    }\n}"
								}
							]
						},
						{
							"name": "Retrieve contact",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.podium.com/v4/contacts/john.doe@podium.com",
									"protocol": "https",
									"host": [
										"api",
										"podium",
										"com"
									],
									"path": [
										"v4",
										"contacts",
										"john.doe@podium.com"
									]
								}
							},
							"response": [
								{
									"name": "Retrieve a contact",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://api.podium.com/v4/contacts/john.doe@podium.com",
											"protocol": "https",
											"host": [
												"api",
												"podium",
												"com"
											],
											"path": [
												"v4",
												"contacts",
												"john.doe@podium.com"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"attributes\": [],\n        \"conversations\": [\n            {\n                \"uid\": \"00000000-0000-0000-0000-000000000000\"\n            }\n        ],\n        \"createdAt\": null,\n        \"emails\": [\n            \"john.doe@podium.com\"\n        ],\n        \"locations\": [\n            {\n                \"uid\": \"00000000-0000-0000-0000-000000000000\"\n            }\n        ],\n        \"name\": \"Abe\",\n        \"organization\": {\n            \"uid\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        \"phoneNumbers\": [\n            \"+18011117888\"\n        ],\n        \"tags\": [],\n        \"uid\": null,\n        \"updatedAt\": null\n    },\n    \"metadata\": {\n        \"url\": \"/v4/contacts/john.doe@podium.com\"\n    }\n}"
								}
							]
						},
						{
							"name": "Update a contact",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"conversationUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"email\": \"max@podium.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.podium.com/v4/contacts/+1801000000",
									"protocol": "https",
									"host": [
										"api",
										"podium",
										"com"
									],
									"path": [
										"v4",
										"contacts",
										"+1801000000"
									]
								}
							},
							"response": [
								{
									"name": "Update a contact",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "https://api.podium.com/v4/contacts/+1801000000",
											"protocol": "https",
											"host": [
												"api",
												"podium",
												"com"
											],
											"path": [
												"v4",
												"contacts",
												"+1801000000"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"identifier\": \"+1801000000\"\n    },\n    \"metadata\": {\n        \"url\": \"/v4/contacts/+1801000000\"\n    }\n}"
								}
							]
						},
						{
							"name": "Add contact attribute to contact",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"Link\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.podium.com/v4/contacts/+1801000000/attributes/00000000-0000-0000-0000-000000000000",
									"protocol": "https",
									"host": [
										"api",
										"podium",
										"com"
									],
									"path": [
										"v4",
										"contacts",
										"+1801000000",
										"attributes",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"response": [
								{
									"name": "Add contact attribute to contact",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"Link\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.podium.com/v4/contacts/+1801000000/attributes/00000000-0000-0000-0000-000000000000",
											"protocol": "https",
											"host": [
												"api",
												"podium",
												"com"
											],
											"path": [
												"v4",
												"contacts",
												"+1801000000",
												"attributes",
												"00000000-0000-0000-0000-000000000000"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": null,
									"cookie": [],
									"body": "{\n    \"data\": {\n        \"identifier\": \"+1801000000\"\n    },\n    \"metadata\": {\n        \"url\": \"/v4/contacts/+1801000000/attributes/00000000-0000-0000-0000-000000000000\"\n    }\n}"
								}
							]
						},
						{
							"name": "Update contact attribute inside contact",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"conversationUid\": \"Link-update\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.podium.com/v4/contacts/+1801000000/attributes/00000000-0000-0000-0000-000000000000",
									"protocol": "https",
									"host": [
										"api",
										"podium",
										"com"
									],
									"path": [
										"v4",
										"contacts",
										"+1801000000",
										"attributes",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"response": [
								{
									"name": "Update contact attribute for contact",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"conversationUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"email\": \"max@podium.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.podium.com/v4/contacts/+1801000000",
											"protocol": "https",
											"host": [
												"api",
												"podium",
												"com"
											],
											"path": [
												"v4",
												"contacts",
												"+1801000000"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Remove attribute from contact",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.podium.com/v4/contacts/john.doe@podium.com//attributes/{uid}",
									"protocol": "https",
									"host": [
										"api",
										"podium",
										"com"
									],
									"path": [
										"v4",
										"contacts",
										"john.doe@podium.com",
										"",
										"attributes",
										"{uid}"
									]
								}
							},
							"response": [
								{
									"name": "Remove attribute from contact",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.podium.com/v4/contacts/john.doe@podium.com",
											"protocol": "https",
											"host": [
												"api",
												"podium",
												"com"
											],
											"path": [
												"v4",
												"contacts",
												"john.doe@podium.com"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Add existing tag to contact",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://api.podium.com/v4/contacts/john.doe@podium.com/tags/00000000-0000-0000-0000-000000000000",
									"protocol": "https",
									"host": [
										"api",
										"podium",
										"com"
									],
									"path": [
										"v4",
										"contacts",
										"john.doe@podium.com",
										"tags",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"response": [
								{
									"name": "Add tag to contact",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://api.podium.com/v4/contacts/john.doe@podium.com/tags/00000000-0000-0000-0000-000000000000",
											"protocol": "https",
											"host": [
												"api",
												"podium",
												"com"
											],
											"path": [
												"v4",
												"contacts",
												"john.doe@podium.com",
												"tags",
												"00000000-0000-0000-0000-000000000000"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						},
						{
							"name": "Remove tag from contact",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://api.podium.com/v4/contacts/john.doe@podium.com/tags/00000000-0000-0000-0000-000000000000",
									"protocol": "https",
									"host": [
										"api",
										"podium",
										"com"
									],
									"path": [
										"v4",
										"contacts",
										"john.doe@podium.com",
										"tags",
										"00000000-0000-0000-0000-000000000000"
									]
								}
							},
							"response": [
								{
									"name": "Remove tag from contact",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://api.podium.com/v4/contacts/john.doe@podium.com",
											"protocol": "https",
											"host": [
												"api",
												"podium",
												"com"
											],
											"path": [
												"v4",
												"contacts",
												"john.doe@podium.com"
											]
										}
									},
									"_postman_previewlanguage": null,
									"header": null,
									"cookie": [],
									"body": null
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "client_authentication",
						"value": "body",
						"type": "string"
					},
					{
						"key": "clientSecret",
						"value": "<enter clientSecret from dev portal>",
						"type": "string"
					},
					{
						"key": "clientId",
						"value": "<enter clientID from dev portal>",
						"type": "string"
					},
					{
						"key": "state",
						"value": "hold",
						"type": "string"
					},
					{
						"key": "scope",
						"value": "read_contacts write_contacts",
						"type": "string"
					},
					{
						"key": "useBrowser",
						"value": true,
						"type": "boolean"
					},
					{
						"key": "accessTokenUrl",
						"value": "https://accounts.podium.com/oauth/token",
						"type": "string"
					},
					{
						"key": "authUrl",
						"value": "https://accounts.podium.com/oauth/authorize",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "CONVERSATIONS",
			"item": [
				{
					"name": "Conversation",
					"item": [
						{
							"name": "List conversations.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/conversations?cursor=MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw&limit=10&locationUid=00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"conversations"
									],
									"query": [
										{
											"key": "cursor",
											"value": "MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw",
											"description": "Retrieves the page of items that comes after the `cursor`."
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Max number of items to return per request. Defaults to `10`."
										},
										{
											"key": "locationUid",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "Podium unique identifier for location."
										}
									]
								},
								"description": "List all conversations. \n\nIf the `cursor` parameter is used then all other parameters will be ignored. This is to avoid confusion if passing both a `cursor` and other parameters which would change what data is being returned."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/conversations?cursor=MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw&limit=10&locationUid=00000000-0000-0000-0000-000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"conversations"
											],
											"query": [
												{
													"key": "cursor",
													"value": "MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "locationUid",
													"value": "00000000-0000-0000-0000-000000000000"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"assignedUserUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"channel\": {\n      \"identifier\": \"email@email.com\",\n      \"type\": \"email\"\n    },\n    \"closed\": false,\n    \"contactName\": \"dol\",\n    \"createdAt\": \"2015-01-23T23:50:07Z\",\n    \"lastItemAt\": \"2015-01-23T23:50:07Z\",\n    \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"uid\": \"00000000-0000-0000-0000-000000000000\",\n    \"updatedAt\": \"2015-01-23T23:50:07Z\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/conversations?cursor=MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw&limit=10&locationUid=00000000-0000-0000-0000-000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"conversations"
											],
											"query": [
												{
													"key": "cursor",
													"value": "MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "locationUid",
													"value": "00000000-0000-0000-0000-000000000000"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						},
						{
							"name": "Get a conversation.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/conversations/:uid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"conversations",
										":uid"
									],
									"variable": [
										{
											"key": "uid",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Podium unique identifier for conversation."
										}
									]
								},
								"description": "Gets a conversation that has previously been created."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/conversations/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"conversations",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for conversation."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"assignedUserUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"channel\": {\n      \"identifier\": \"email@email.com\",\n      \"type\": \"email\"\n    },\n    \"closed\": false,\n    \"contactName\": \"dol\",\n    \"createdAt\": \"2015-01-23T23:50:07Z\",\n    \"lastItemAt\": \"2015-01-23T23:50:07Z\",\n    \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"uid\": \"00000000-0000-0000-0000-000000000000\",\n    \"updatedAt\": \"2015-01-23T23:50:07Z\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/conversations/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"conversations",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for conversation."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						},
						{
							"name": "Update a conversation.",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"assignedUserUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"closed\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v4/conversations/:uid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"conversations",
										":uid"
									],
									"variable": [
										{
											"key": "uid",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Podium unique identifier for conversation."
										}
									]
								},
								"description": "Update a conversation."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"assignedUserUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"closed\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/conversations/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"conversations",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for conversation."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"assignedUserUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"channel\": {\n      \"identifier\": \"email@email.com\",\n      \"type\": \"email\"\n    },\n    \"closed\": false,\n    \"contactName\": \"dol\",\n    \"createdAt\": \"2015-01-23T23:50:07Z\",\n    \"lastItemAt\": \"2015-01-23T23:50:07Z\",\n    \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"uid\": \"00000000-0000-0000-0000-000000000000\",\n    \"updatedAt\": \"2015-01-23T23:50:07Z\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"assignedUserUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"closed\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/conversations/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"conversations",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for conversation."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						},
						{
							"name": "Writeback lead",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/conversations/:uid/lead_writeback",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"conversations",
										":uid",
										"lead_writeback"
									],
									"variable": [
										{
											"key": "uid",
											"value": "nisi dolor sed ullamco",
											"description": "(Required) Conversation uid of the lead."
										}
									]
								},
								"description": "Writeback lead to the connected CRM."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/conversations/:uid/lead_writeback",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"conversations",
												":uid",
												"lead_writeback"
											],
											"variable": [
												{
													"key": "uid",
													"value": "nisi dolor sed ullamco",
													"description": "(Required) Conversation uid of the lead."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"conversation\": {\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    }\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/conversations/:uid/lead_writeback",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"conversations",
												":uid",
												"lead_writeback"
											],
											"variable": [
												{
													"key": "uid",
													"value": "nisi dolor sed ullamco",
													"description": "(Required) Conversation uid of the lead."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						},
						{
							"name": "Create a note for given conversation.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": \"anim Excepteur dol\",\n  \"senderName\": \"dolor\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v4/conversations/:uid/notes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"conversations",
										":uid",
										"notes"
									],
									"variable": [
										{
											"key": "uid",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Podium unique identifier for conversation."
										}
									]
								},
								"description": "Creates a note for the given conversation."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"body\": \"anim Excepteur dol\",\n  \"senderName\": \"dolor\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/conversations/:uid/notes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"conversations",
												":uid",
												"notes"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for conversation."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"body\": \"cupidatat enim nisi magna\",\n    \"conversation\": {\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"createdAt\": \"2015-01-23T23:50:07Z\",\n    \"location\": {\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"organization\": {\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"senderName\": \"laborum do sit Lorem\",\n    \"uid\": \"00000000-0000-0000-0000-000000000000\",\n    \"updatedAt\": \"2015-01-23T23:50:07Z\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"body\": \"anim Excepteur dol\",\n  \"senderName\": \"dolor\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/conversations/:uid/notes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"conversations",
												":uid",
												"notes"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for conversation."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "client_authentication",
						"value": "body",
						"type": "string"
					},
					{
						"key": "useBrowser",
						"value": true,
						"type": "boolean"
					},
					{
						"key": "clientSecret",
						"value": "<enter clientSecret from dev portal>",
						"type": "string"
					},
					{
						"key": "clientId",
						"value": "<enter clientID from dev portal>",
						"type": "string"
					},
					{
						"key": "accessTokenUrl",
						"value": "https://accounts.podium.com/oauth/token",
						"type": "string"
					},
					{
						"key": "authUrl",
						"value": "https://accounts.podium.com/oauth/authorize",
						"type": "string"
					},
					{
						"key": "state",
						"value": "hold",
						"type": "string"
					},
					{
						"key": "scope",
						"value": "read_messages write_messages",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "FEEDBACK (SURVEYS)",
			"item": [
				{
					"name": "Feedback",
					"item": [
						{
							"name": "List all feedback surveys.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/feedback?createdAt[gt]=2015-01-23T23:50:07Z&createdAt[gte]=2015-01-23T23:50:07Z&createdAt[lt]=2015-01-23T23:50:07Z&createdAt[lte]=2015-01-23T23:50:07Z&limit=10&cursor=MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"feedback"
									],
									"query": [
										{
											"key": "createdAt[gt]",
											"value": "2015-01-23T23:50:07Z",
											"description": "Filter on the `createdAt` date."
										},
										{
											"key": "createdAt[gte]",
											"value": "2015-01-23T23:50:07Z",
											"description": "Filter on the `createdAt` date."
										},
										{
											"key": "createdAt[lt]",
											"value": "2015-01-23T23:50:07Z",
											"description": "Filter on the `createdAt` date."
										},
										{
											"key": "createdAt[lte]",
											"value": "2015-01-23T23:50:07Z",
											"description": "Filter on the `createdAt` date."
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Max number of items to return per request. Defaults to `10`."
										},
										{
											"key": "cursor",
											"value": "MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw",
											"description": "Retrieves the page of items that comes after the `cursor`."
										}
									]
								},
								"description": "List of all the feedback surveys that the caller has access to. The surveys are sorted by `createdAt` date, with the most recent appearing first.\n\nIf the `cursor` parameter is used then all other parameters will be ignored. This is to avoid confusion if passing both a `cursor` and other parameters which would change what data is being returned."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/feedback?createdAt[gt]=2015-01-23T23:50:07Z&createdAt[gte]=2015-01-23T23:50:07Z&createdAt[lt]=2015-01-23T23:50:07Z&createdAt[lte]=2015-01-23T23:50:07Z&limit=10&cursor=MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"feedback"
											],
											"query": [
												{
													"key": "createdAt[gt]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[gte]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[lt]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[lte]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "cursor",
													"value": "MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"adjustedScore\": 100,\n      \"archived\": false,\n      \"attributions\": [\n        {\n          \"type\": \"integrated_send\",\n          \"userName\": \"John Apple\",\n          \"userUid\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        {\n          \"type\": \"integrated_send\",\n          \"userName\": \"John Apple\",\n          \"userUid\": \"00000000-0000-0000-0000-000000000000\"\n        }\n      ],\n      \"channel\": {\n        \"identifier\": \"email@email.com\",\n        \"type\": \"email\"\n      },\n      \"createdAt\": \"2015-01-23T23:50:07Z\",\n      \"currentStep\": \"final\",\n      \"customerName\": \"Joe Orange\",\n      \"firstResponseReceivedAt\": \"2015-01-23T23:50:07Z\",\n      \"flowUid\": \"00000000-0000-0000-0000-000000000000\",\n      \"location\": {\n        \"organizationUid\": \"00000000-0000-0000-0000-000000000000\",\n        \"uid\": \"00000000-0000-0000-0000-000000000000\"\n      },\n      \"messages\": [\n        \"wonderful.\",\n        \"wonderful.\"\n      ],\n      \"score\": 5,\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    {\n      \"adjustedScore\": 100,\n      \"archived\": false,\n      \"attributions\": [\n        {\n          \"type\": \"final\",\n          \"userName\": \"John Apple\",\n          \"userUid\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        {\n          \"type\": \"final\",\n          \"userName\": \"John Apple\",\n          \"userUid\": \"00000000-0000-0000-0000-000000000000\"\n        }\n      ],\n      \"channel\": {\n        \"identifier\": \"email@email.com\",\n        \"type\": \"email\"\n      },\n      \"createdAt\": \"2015-01-23T23:50:07Z\",\n      \"currentStep\": \"follow_up\",\n      \"customerName\": \"Joe Orange\",\n      \"firstResponseReceivedAt\": \"2015-01-23T23:50:07Z\",\n      \"flowUid\": \"00000000-0000-0000-0000-000000000000\",\n      \"location\": {\n        \"organizationUid\": \"00000000-0000-0000-0000-000000000000\",\n        \"uid\": \"00000000-0000-0000-0000-000000000000\"\n      },\n      \"messages\": [\n        \"wonderful.\",\n        \"wonderful.\"\n      ],\n      \"score\": 5,\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    }\n  ],\n  \"metadata\": {\n    \"nextCursor\": \"MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw\",\n    \"previousCursor\": \"MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw\",\n    \"totalItems\": 73354447,\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/feedback?createdAt[gt]=2015-01-23T23:50:07Z&createdAt[gte]=2015-01-23T23:50:07Z&createdAt[lt]=2015-01-23T23:50:07Z&createdAt[lte]=2015-01-23T23:50:07Z&limit=10&cursor=MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"feedback"
											],
											"query": [
												{
													"key": "createdAt[gt]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[gte]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[lt]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[lte]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "cursor",
													"value": "MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						},
						{
							"name": "Create a feedback survey.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerName\": \"cillum aliqua et magna\",\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"phoneNumber\": \"eiusmod sit ullamco nulla\",\n  \"flowUid\": \"00000000-0000-0000-0000-000000000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v4/feedback",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"feedback"
									]
								},
								"description": "Create a feedback survey. The survey is created asynchronously, so only the UID is returned."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerName\": \"cillum aliqua et magna\",\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"phoneNumber\": \"eiusmod sit ullamco nulla\",\n  \"flowUid\": \"00000000-0000-0000-0000-000000000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/feedback",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"feedback"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"uid\": \"00000000-0000-0000-0000-000000000000\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerName\": \"cillum aliqua et magna\",\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"phoneNumber\": \"eiusmod sit ullamco nulla\",\n  \"flowUid\": \"00000000-0000-0000-0000-000000000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/feedback",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"feedback"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						}
					],
					"auth": {
						"type": "oauth2",
						"oauth2": [
							{
								"key": "accessTokenUrl",
								"value": "https://accounts.podium.com/oauth/token",
								"type": "string"
							},
							{
								"key": "authUrl",
								"value": "https://accounts.podium.com/oauth/authorize",
								"type": "string"
							},
							{
								"key": "client_authentication",
								"value": "body",
								"type": "string"
							},
							{
								"key": "scope",
								"value": "read_feedback",
								"type": "string"
							},
							{
								"key": "addTokenTo",
								"value": "header",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "client_authentication",
						"value": "body",
						"type": "string"
					},
					{
						"key": "useBrowser",
						"value": true,
						"type": "boolean"
					},
					{
						"key": "accessTokenUrl",
						"value": "https://accounts.podium.com/oauth/token",
						"type": "string"
					},
					{
						"key": "authUrl",
						"value": "https://accounts.podium.com/oauth/authorize",
						"type": "string"
					},
					{
						"key": "clientSecret",
						"value": "<enter clientSecret from dev portal>",
						"type": "string"
					},
					{
						"key": "clientId",
						"value": "<enter clientID from dev portal>",
						"type": "string"
					},
					{
						"key": "state",
						"value": "hold",
						"type": "string"
					},
					{
						"key": "scope",
						"value": "read_feedback",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "MESSENGER",
			"item": [
				{
					"name": "Send a message",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"body\": \"Just a reminder that your appointment is today!\",\n  \"channel\": {\n    \"identifier\": \"email@email.com\",\n    \"type\": \"email\"\n  },\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"contactName\": \"Joe Orange\",\n  \"senderName\": \"Bot1234\",\n  \"subject\": \"Appointment reminder\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v4/messages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v4",
								"messages"
							]
						},
						"description": "Send a message. A message can only be sent on behalf of a user if they have the necessary permissions to send\nmessages in: conversations assigned to them, conversations assigned to others, and unassigned conversations.\n"
					},
					"response": [
						{
							"name": "Successful response.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": \"Just a reminder that your appointment is today!\",\n  \"channel\": {\n    \"identifier\": \"email@email.com\",\n    \"type\": \"email\"\n  },\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"contactName\": \"Joe Orange\",\n  \"senderName\": \"Bot1234\",\n  \"subject\": \"Appointment reminder\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v4/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"messages"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"attachmentUrl\": \"https://www.podium.com/\",\n    \"body\": \"Hello there.\",\n    \"contact\": {\n      \"externalIdentifier\": \"123-abc\",\n      \"name\": \"Joe Orange\",\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"contactName\": \"Joe Orange\",\n    \"conversation\": {\n      \"assignedUserUid\": \"00000000-0000-0000-0000-000000000000\",\n      \"channel\": {\n        \"identifier\": \"email@email.com\",\n        \"type\": \"email\"\n      },\n      \"startedAt\": \"2015-01-23T23:50:07Z\",\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"createdAt\": \"2015-01-23T23:50:07Z\",\n    \"failureReason\": \"Attempted to send SMS to a landline.\",\n    \"location\": {\n      \"organizationUid\": \"00000000-0000-0000-0000-000000000000\",\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"sender\": {\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"senderUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"uid\": \"00000000-0000-0000-0000-000000000000\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
						},
						{
							"name": "Error response.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": \"Just a reminder that your appointment is today!\",\n  \"channel\": {\n    \"identifier\": \"email@email.com\",\n    \"type\": \"email\"\n  },\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"contactName\": \"Joe Orange\",\n  \"senderName\": \"Bot1234\",\n  \"subject\": \"Appointment reminder\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v4/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"messages"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
						}
					]
				}
			],
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "client_authentication",
						"value": "body",
						"type": "string"
					},
					{
						"key": "accessTokenUrl",
						"value": "https://accounts.podium.com/oauth/token",
						"type": "string"
					},
					{
						"key": "authUrl",
						"value": "https://accounts.podium.com/oauth/authorize",
						"type": "string"
					},
					{
						"key": "clientId",
						"value": "<enter clientID from dev portal>",
						"type": "string"
					},
					{
						"key": "clientSecret",
						"value": "<enter clientSecret from dev portal>",
						"type": "string"
					},
					{
						"key": "useBrowser",
						"value": true,
						"type": "boolean"
					},
					{
						"key": "state",
						"value": "hold",
						"type": "string"
					},
					{
						"key": "scope",
						"value": "read_templates write_templates write_messages",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {",
							"    console.log(response.json());",
							"});"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "PAYMENTS",
			"item": [
				{
					"name": "Invoice",
					"item": [
						{
							"name": "Get all invoices.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/invoices?locationUid=00000000-0000-0000-0000-000000000000&datePaid=2015-01-23T23:50:07Z&dateRefunded=2015-01-23T23:50:07Z&dateCreated=2015-01-23T23:50:07Z&limit=10&cursor=MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"invoices"
									],
									"query": [
										{
											"key": "locationUid",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "Podium unique identifier for location."
										},
										{
											"key": "datePaid",
											"value": "2015-01-23T23:50:07Z",
											"description": "Return invoices with a payment whose `createdAt` is greater or equal to this date."
										},
										{
											"key": "dateRefunded",
											"value": "2015-01-23T23:50:07Z",
											"description": "Return invoices with a refund whose `createdAt` is greater or equal to this date."
										},
										{
											"key": "dateCreated",
											"value": "2015-01-23T23:50:07Z",
											"description": "Return invoices whose `createdAt` is greater or equal to this date."
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Max number of items to return per request. Defaults to `10`."
										},
										{
											"key": "cursor",
											"value": "MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw",
											"description": "Retrieves the page of items that comes after or before the `cursor`."
										}
									]
								},
								"description": "List of all invoices that match the query parameters."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/invoices?locationUid=00000000-0000-0000-0000-000000000000&datePaid=2015-01-23T23:50:07Z&dateRefunded=2015-01-23T23:50:07Z&dateCreated=2015-01-23T23:50:07Z&limit=10&cursor=MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"invoices"
											],
											"query": [
												{
													"key": "locationUid",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "datePaid",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "dateRefunded",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "dateCreated",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "cursor",
													"value": "MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"canceledAt\": \"2015-01-23T23:50:07Z\",\n      \"canceledNote\": \"The wrong amount was entered.\",\n      \"channel\": {\n        \"identifier\": \"email@email.com\",\n        \"type\": \"email\"\n      },\n      \"conversationUid\": \"00000000-0000-0000-0000-000000000000\",\n      \"createdAt\": \"2015-01-23T23:50:07Z\",\n      \"currencyRef\": \"USD\",\n      \"customerName\": \"Joe Orange\",\n      \"invoiceNumber\": \"abc-12345-def\",\n      \"lineItems\": [\n        {\n          \"amount\": 1099,\n          \"description\": \"Total\"\n        },\n        {\n          \"amount\": 1099,\n          \"description\": \"Total\"\n        }\n      ],\n      \"location\": {\n        \"uid\": \"00000000-0000-0000-0000-000000000000\"\n      },\n      \"paidAt\": \"2015-01-23T23:50:07Z\",\n      \"paymentNet\": 1000,\n      \"payments\": [\n        {\n          \"bankAccountLast4\": \"1245\",\n          \"bankAccountName\": \"The Bank\",\n          \"cardBrand\": \"visa\",\n          \"cardLast4\": \"4242\",\n          \"createdAt\": \"2015-01-23T23:50:07Z\",\n          \"fee\": 99,\n          \"interchangeFee\": 50,\n          \"refunds\": [\n            {\n              \"amount\": 100,\n              \"createdAt\": \"2015-01-23T23:50:07Z\",\n              \"notes\": [\n                \"The product did not function properly.\",\n                \"The product did not function properly.\"\n              ],\n              \"reason\": \"requested_by_customer\",\n              \"settledAt\": \"2015-01-23T23:50:07Z\",\n              \"status\": \"failed_charge_for_pending_refund_disputed\"\n            },\n            {\n              \"amount\": 100,\n              \"createdAt\": \"2015-01-23T23:50:07Z\",\n              \"notes\": [\n                \"The product did not function properly.\",\n                \"The product did not function properly.\"\n              ],\n              \"reason\": \"requested_by_customer\",\n              \"settledAt\": \"2015-01-23T23:50:07Z\",\n              \"status\": \"failed_lost_or_stolen\"\n            }\n          ],\n          \"settledAt\": \"2015-01-23T23:50:07Z\",\n          \"status\": \"paid\",\n          \"uid\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        {\n          \"bankAccountLast4\": \"1245\",\n          \"bankAccountName\": \"The Bank\",\n          \"cardBrand\": \"visa\",\n          \"cardLast4\": \"4242\",\n          \"createdAt\": \"2015-01-23T23:50:07Z\",\n          \"fee\": 99,\n          \"interchangeFee\": 50,\n          \"refunds\": [\n            {\n              \"amount\": 100,\n              \"createdAt\": \"2015-01-23T23:50:07Z\",\n              \"notes\": [\n                \"The product did not function properly.\",\n                \"The product did not function properly.\"\n              ],\n              \"reason\": \"fraudulent\",\n              \"settledAt\": \"2015-01-23T23:50:07Z\",\n              \"status\": \"failed_lost_or_stolen\"\n            },\n            {\n              \"amount\": 100,\n              \"createdAt\": \"2015-01-23T23:50:07Z\",\n              \"notes\": [\n                \"The product did not function properly.\",\n                \"The product did not function properly.\"\n              ],\n              \"reason\": \"duplicate\",\n              \"settledAt\": \"2015-01-23T23:50:07Z\",\n              \"status\": \"failed_lost_or_stolen\"\n            }\n          ],\n          \"settledAt\": \"2015-01-23T23:50:07Z\",\n          \"status\": \"paid\",\n          \"uid\": \"00000000-0000-0000-0000-000000000000\"\n        }\n      ],\n      \"readerUid\": \"00000000-0000-0000-0000-000000000000\",\n      \"requester\": \"John Apple\",\n      \"status\": \"paid\",\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    {\n      \"canceledAt\": \"2015-01-23T23:50:07Z\",\n      \"canceledNote\": \"The wrong amount was entered.\",\n      \"channel\": {\n        \"identifier\": \"email@email.com\",\n        \"type\": \"email\"\n      },\n      \"conversationUid\": \"00000000-0000-0000-0000-000000000000\",\n      \"createdAt\": \"2015-01-23T23:50:07Z\",\n      \"currencyRef\": \"USD\",\n      \"customerName\": \"Joe Orange\",\n      \"invoiceNumber\": \"abc-12345-def\",\n      \"lineItems\": [\n        {\n          \"amount\": 1099,\n          \"description\": \"Total\"\n        },\n        {\n          \"amount\": 1099,\n          \"description\": \"Total\"\n        }\n      ],\n      \"location\": {\n        \"uid\": \"00000000-0000-0000-0000-000000000000\"\n      },\n      \"paidAt\": \"2015-01-23T23:50:07Z\",\n      \"paymentNet\": 1000,\n      \"payments\": [\n        {\n          \"bankAccountLast4\": \"1245\",\n          \"bankAccountName\": \"The Bank\",\n          \"cardBrand\": \"visa\",\n          \"cardLast4\": \"4242\",\n          \"createdAt\": \"2015-01-23T23:50:07Z\",\n          \"fee\": 99,\n          \"interchangeFee\": 50,\n          \"refunds\": [\n            {\n              \"amount\": 100,\n              \"createdAt\": \"2015-01-23T23:50:07Z\",\n              \"notes\": [\n                \"The product did not function properly.\",\n                \"The product did not function properly.\"\n              ],\n              \"reason\": \"requested_by_customer\",\n              \"settledAt\": \"2015-01-23T23:50:07Z\",\n              \"status\": \"failed_expired_or_cancelled\"\n            },\n            {\n              \"amount\": 100,\n              \"createdAt\": \"2015-01-23T23:50:07Z\",\n              \"notes\": [\n                \"The product did not function properly.\",\n                \"The product did not function properly.\"\n              ],\n              \"reason\": \"duplicate\",\n              \"settledAt\": \"2015-01-23T23:50:07Z\",\n              \"status\": \"failed_expired_or_cancelled\"\n            }\n          ],\n          \"settledAt\": \"2015-01-23T23:50:07Z\",\n          \"status\": \"paid\",\n          \"uid\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        {\n          \"bankAccountLast4\": \"1245\",\n          \"bankAccountName\": \"The Bank\",\n          \"cardBrand\": \"visa\",\n          \"cardLast4\": \"4242\",\n          \"createdAt\": \"2015-01-23T23:50:07Z\",\n          \"fee\": 99,\n          \"interchangeFee\": 50,\n          \"refunds\": [\n            {\n              \"amount\": 100,\n              \"createdAt\": \"2015-01-23T23:50:07Z\",\n              \"notes\": [\n                \"The product did not function properly.\",\n                \"The product did not function properly.\"\n              ],\n              \"reason\": \"requested_by_customer\",\n              \"settledAt\": \"2015-01-23T23:50:07Z\",\n              \"status\": \"failed_expired_or_cancelled\"\n            },\n            {\n              \"amount\": 100,\n              \"createdAt\": \"2015-01-23T23:50:07Z\",\n              \"notes\": [\n                \"The product did not function properly.\",\n                \"The product did not function properly.\"\n              ],\n              \"reason\": \"requested_by_customer\",\n              \"settledAt\": \"2015-01-23T23:50:07Z\",\n              \"status\": \"failed_unknown\"\n            }\n          ],\n          \"settledAt\": \"2015-01-23T23:50:07Z\",\n          \"status\": \"paid\",\n          \"uid\": \"00000000-0000-0000-0000-000000000000\"\n        }\n      ],\n      \"readerUid\": \"00000000-0000-0000-0000-000000000000\",\n      \"requester\": \"John Apple\",\n      \"status\": \"refund_failed\",\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    }\n  ],\n  \"metadata\": {\n    \"nextCursor\": \"MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw\",\n    \"previousCursor\": \"MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw\",\n    \"totalItems\": -46257660,\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/invoices?locationUid=00000000-0000-0000-0000-000000000000&datePaid=2015-01-23T23:50:07Z&dateRefunded=2015-01-23T23:50:07Z&dateCreated=2015-01-23T23:50:07Z&limit=10&cursor=MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"invoices"
											],
											"query": [
												{
													"key": "locationUid",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "datePaid",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "dateRefunded",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "dateCreated",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "cursor",
													"value": "MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						},
						{
							"name": "Create an invoice.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"channelIdentifier\": \"email@email.com\",\n  \"customerName\": \"Barry Grape\",\n  \"lineItems\": [\n    {\n      \"amount\": 4186,\n      \"description\": \"Oil change.\"\n    }\n  ],\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"accountUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"invoiceNumber\": \"abc-12345-def\",\n  \"readerUid\": \"00000000-0000-0000-0000-000000000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v4/invoices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"invoices"
									]
								},
								"description": "Creates an invoice.\n\n### Card Present Invoice\n\nA card-present-invoice used to process an invoice through a card reader. After the invoice\nis created, there is a callback to the card reader to complete the transaction. If no\n`accountUid` is given, the card reader's default account is used.\n\n### Card Not Present Invoice\n\nA card-not-present-invoice is used to process an invoice asynchronously. After the invoice is\ncreated, a payment link is sent to the customer from the merchants Podium account. The customer\ncan click on the link to complete the transaction. If no `accountUid` is given, the most\nrecently created account is used.\n"
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channelIdentifier\": \"email@email.com\",\n  \"customerName\": \"Barry Grape\",\n  \"lineItems\": [\n    {\n      \"amount\": 4186,\n      \"description\": \"Oil change.\"\n    }\n  ],\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"accountUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"invoiceNumber\": \"abc-12345-def\",\n  \"readerUid\": \"00000000-0000-0000-0000-000000000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/invoices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"invoices"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"canceledAt\": \"2015-01-23T23:50:07Z\",\n    \"canceledNote\": \"The wrong amount was entered.\",\n    \"channel\": {\n      \"identifier\": \"email@email.com\",\n      \"type\": \"email\"\n    },\n    \"conversationUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"createdAt\": \"2015-01-23T23:50:07Z\",\n    \"currencyRef\": \"USD\",\n    \"customerName\": \"Joe Orange\",\n    \"invoiceNumber\": \"abc-12345-def\",\n    \"lineItems\": [\n      {\n        \"amount\": 1099,\n        \"description\": \"Total\"\n      },\n      {\n        \"amount\": 1099,\n        \"description\": \"Total\"\n      }\n    ],\n    \"location\": {\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"paidAt\": \"2015-01-23T23:50:07Z\",\n    \"paymentNet\": 1000,\n    \"payments\": [\n      {\n        \"bankAccountLast4\": \"1245\",\n        \"bankAccountName\": \"The Bank\",\n        \"cardBrand\": \"visa\",\n        \"cardLast4\": \"4242\",\n        \"createdAt\": \"2015-01-23T23:50:07Z\",\n        \"fee\": 99,\n        \"interchangeFee\": 50,\n        \"refunds\": [\n          {\n            \"amount\": 100,\n            \"createdAt\": \"2015-01-23T23:50:07Z\",\n            \"notes\": [\n              \"The product did not function properly.\",\n              \"The product did not function properly.\"\n            ],\n            \"reason\": \"requested_by_customer\",\n            \"settledAt\": \"2015-01-23T23:50:07Z\",\n            \"status\": \"failed_lost_or_stolen\"\n          },\n          {\n            \"amount\": 100,\n            \"createdAt\": \"2015-01-23T23:50:07Z\",\n            \"notes\": [\n              \"The product did not function properly.\",\n              \"The product did not function properly.\"\n            ],\n            \"reason\": \"duplicate\",\n            \"settledAt\": \"2015-01-23T23:50:07Z\",\n            \"status\": \"failed_charge_for_pending_refund_disputed\"\n          }\n        ],\n        \"settledAt\": \"2015-01-23T23:50:07Z\",\n        \"status\": \"refund_pending\",\n        \"uid\": \"00000000-0000-0000-0000-000000000000\"\n      },\n      {\n        \"bankAccountLast4\": \"1245\",\n        \"bankAccountName\": \"The Bank\",\n        \"cardBrand\": \"visa\",\n        \"cardLast4\": \"4242\",\n        \"createdAt\": \"2015-01-23T23:50:07Z\",\n        \"fee\": 99,\n        \"interchangeFee\": 50,\n        \"refunds\": [\n          {\n            \"amount\": 100,\n            \"createdAt\": \"2015-01-23T23:50:07Z\",\n            \"notes\": [\n              \"The product did not function properly.\",\n              \"The product did not function properly.\"\n            ],\n            \"reason\": \"duplicate\",\n            \"settledAt\": \"2015-01-23T23:50:07Z\",\n            \"status\": \"succeeded\"\n          },\n          {\n            \"amount\": 100,\n            \"createdAt\": \"2015-01-23T23:50:07Z\",\n            \"notes\": [\n              \"The product did not function properly.\",\n              \"The product did not function properly.\"\n            ],\n            \"reason\": \"requested_by_customer\",\n            \"settledAt\": \"2015-01-23T23:50:07Z\",\n            \"status\": \"failed_lost_or_stolen\"\n          }\n        ],\n        \"settledAt\": \"2015-01-23T23:50:07Z\",\n        \"status\": \"refund_failed\",\n        \"uid\": \"00000000-0000-0000-0000-000000000000\"\n      }\n    ],\n    \"readerUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"requester\": \"John Apple\",\n    \"status\": \"refund_pending\",\n    \"uid\": \"00000000-0000-0000-0000-000000000000\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"channelIdentifier\": \"email@email.com\",\n  \"customerName\": \"Barry Grape\",\n  \"lineItems\": [\n    {\n      \"amount\": 4186,\n      \"description\": \"Oil change.\"\n    }\n  ],\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"accountUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"invoiceNumber\": \"abc-12345-def\",\n  \"readerUid\": \"00000000-0000-0000-0000-000000000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/invoices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"invoices"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						},
						{
							"name": "Get an invoice.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/invoices/:uid?locationUid=00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"invoices",
										":uid"
									],
									"query": [
										{
											"key": "locationUid",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Podium unique identifier for location."
										}
									],
									"variable": [
										{
											"key": "uid",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Podium unique identifier for invoice."
										}
									]
								},
								"description": "Gets an invoice that has previously been created."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/invoices/:uid?locationUid=00000000-0000-0000-0000-000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"invoices",
												":uid"
											],
											"query": [
												{
													"key": "locationUid",
													"value": "00000000-0000-0000-0000-000000000000"
												}
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for invoice."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"canceledAt\": \"2015-01-23T23:50:07Z\",\n    \"canceledNote\": \"The wrong amount was entered.\",\n    \"channel\": {\n      \"identifier\": \"email@email.com\",\n      \"type\": \"email\"\n    },\n    \"conversationUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"createdAt\": \"2015-01-23T23:50:07Z\",\n    \"currencyRef\": \"USD\",\n    \"customerName\": \"Joe Orange\",\n    \"invoiceNumber\": \"abc-12345-def\",\n    \"lineItems\": [\n      {\n        \"amount\": 1099,\n        \"description\": \"Total\"\n      },\n      {\n        \"amount\": 1099,\n        \"description\": \"Total\"\n      }\n    ],\n    \"location\": {\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"paidAt\": \"2015-01-23T23:50:07Z\",\n    \"paymentNet\": 1000,\n    \"payments\": [\n      {\n        \"bankAccountLast4\": \"1245\",\n        \"bankAccountName\": \"The Bank\",\n        \"cardBrand\": \"visa\",\n        \"cardLast4\": \"4242\",\n        \"createdAt\": \"2015-01-23T23:50:07Z\",\n        \"fee\": 99,\n        \"interchangeFee\": 50,\n        \"refunds\": [\n          {\n            \"amount\": 100,\n            \"createdAt\": \"2015-01-23T23:50:07Z\",\n            \"notes\": [\n              \"The product did not function properly.\",\n              \"The product did not function properly.\"\n            ],\n            \"reason\": \"requested_by_customer\",\n            \"settledAt\": \"2015-01-23T23:50:07Z\",\n            \"status\": \"failed_lost_or_stolen\"\n          },\n          {\n            \"amount\": 100,\n            \"createdAt\": \"2015-01-23T23:50:07Z\",\n            \"notes\": [\n              \"The product did not function properly.\",\n              \"The product did not function properly.\"\n            ],\n            \"reason\": \"duplicate\",\n            \"settledAt\": \"2015-01-23T23:50:07Z\",\n            \"status\": \"failed_charge_for_pending_refund_disputed\"\n          }\n        ],\n        \"settledAt\": \"2015-01-23T23:50:07Z\",\n        \"status\": \"refund_pending\",\n        \"uid\": \"00000000-0000-0000-0000-000000000000\"\n      },\n      {\n        \"bankAccountLast4\": \"1245\",\n        \"bankAccountName\": \"The Bank\",\n        \"cardBrand\": \"visa\",\n        \"cardLast4\": \"4242\",\n        \"createdAt\": \"2015-01-23T23:50:07Z\",\n        \"fee\": 99,\n        \"interchangeFee\": 50,\n        \"refunds\": [\n          {\n            \"amount\": 100,\n            \"createdAt\": \"2015-01-23T23:50:07Z\",\n            \"notes\": [\n              \"The product did not function properly.\",\n              \"The product did not function properly.\"\n            ],\n            \"reason\": \"duplicate\",\n            \"settledAt\": \"2015-01-23T23:50:07Z\",\n            \"status\": \"succeeded\"\n          },\n          {\n            \"amount\": 100,\n            \"createdAt\": \"2015-01-23T23:50:07Z\",\n            \"notes\": [\n              \"The product did not function properly.\",\n              \"The product did not function properly.\"\n            ],\n            \"reason\": \"requested_by_customer\",\n            \"settledAt\": \"2015-01-23T23:50:07Z\",\n            \"status\": \"failed_lost_or_stolen\"\n          }\n        ],\n        \"settledAt\": \"2015-01-23T23:50:07Z\",\n        \"status\": \"refund_failed\",\n        \"uid\": \"00000000-0000-0000-0000-000000000000\"\n      }\n    ],\n    \"readerUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"requester\": \"John Apple\",\n    \"status\": \"refund_pending\",\n    \"uid\": \"00000000-0000-0000-0000-000000000000\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/invoices/:uid?locationUid=00000000-0000-0000-0000-000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"invoices",
												":uid"
											],
											"query": [
												{
													"key": "locationUid",
													"value": "00000000-0000-0000-0000-000000000000"
												}
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for invoice."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						},
						{
							"name": "Cancel an invoice.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"note\": \"Voided invoice.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v4/invoices/:uid/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"invoices",
										":uid",
										"cancel"
									],
									"variable": [
										{
											"key": "uid",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Podium unique identifier for invoice."
										}
									]
								},
								"description": "Cancels an invoice. The seller cannot collect payments for the canceled invoice."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"note\": \"Voided invoice.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/invoices/:uid/cancel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"invoices",
												":uid",
												"cancel"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for invoice."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"canceledAt\": \"2015-01-23T23:50:07Z\",\n    \"canceledNote\": \"The wrong amount was entered.\",\n    \"channel\": {\n      \"identifier\": \"email@email.com\",\n      \"type\": \"email\"\n    },\n    \"conversationUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"createdAt\": \"2015-01-23T23:50:07Z\",\n    \"currencyRef\": \"USD\",\n    \"customerName\": \"Joe Orange\",\n    \"invoiceNumber\": \"abc-12345-def\",\n    \"lineItems\": [\n      {\n        \"amount\": 1099,\n        \"description\": \"Total\"\n      },\n      {\n        \"amount\": 1099,\n        \"description\": \"Total\"\n      }\n    ],\n    \"location\": {\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"paidAt\": \"2015-01-23T23:50:07Z\",\n    \"paymentNet\": 1000,\n    \"payments\": [\n      {\n        \"bankAccountLast4\": \"1245\",\n        \"bankAccountName\": \"The Bank\",\n        \"cardBrand\": \"visa\",\n        \"cardLast4\": \"4242\",\n        \"createdAt\": \"2015-01-23T23:50:07Z\",\n        \"fee\": 99,\n        \"interchangeFee\": 50,\n        \"refunds\": [\n          {\n            \"amount\": 100,\n            \"createdAt\": \"2015-01-23T23:50:07Z\",\n            \"notes\": [\n              \"The product did not function properly.\",\n              \"The product did not function properly.\"\n            ],\n            \"reason\": \"requested_by_customer\",\n            \"settledAt\": \"2015-01-23T23:50:07Z\",\n            \"status\": \"failed_lost_or_stolen\"\n          },\n          {\n            \"amount\": 100,\n            \"createdAt\": \"2015-01-23T23:50:07Z\",\n            \"notes\": [\n              \"The product did not function properly.\",\n              \"The product did not function properly.\"\n            ],\n            \"reason\": \"duplicate\",\n            \"settledAt\": \"2015-01-23T23:50:07Z\",\n            \"status\": \"failed_charge_for_pending_refund_disputed\"\n          }\n        ],\n        \"settledAt\": \"2015-01-23T23:50:07Z\",\n        \"status\": \"refund_pending\",\n        \"uid\": \"00000000-0000-0000-0000-000000000000\"\n      },\n      {\n        \"bankAccountLast4\": \"1245\",\n        \"bankAccountName\": \"The Bank\",\n        \"cardBrand\": \"visa\",\n        \"cardLast4\": \"4242\",\n        \"createdAt\": \"2015-01-23T23:50:07Z\",\n        \"fee\": 99,\n        \"interchangeFee\": 50,\n        \"refunds\": [\n          {\n            \"amount\": 100,\n            \"createdAt\": \"2015-01-23T23:50:07Z\",\n            \"notes\": [\n              \"The product did not function properly.\",\n              \"The product did not function properly.\"\n            ],\n            \"reason\": \"duplicate\",\n            \"settledAt\": \"2015-01-23T23:50:07Z\",\n            \"status\": \"succeeded\"\n          },\n          {\n            \"amount\": 100,\n            \"createdAt\": \"2015-01-23T23:50:07Z\",\n            \"notes\": [\n              \"The product did not function properly.\",\n              \"The product did not function properly.\"\n            ],\n            \"reason\": \"requested_by_customer\",\n            \"settledAt\": \"2015-01-23T23:50:07Z\",\n            \"status\": \"failed_lost_or_stolen\"\n          }\n        ],\n        \"settledAt\": \"2015-01-23T23:50:07Z\",\n        \"status\": \"refund_failed\",\n        \"uid\": \"00000000-0000-0000-0000-000000000000\"\n      }\n    ],\n    \"readerUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"requester\": \"John Apple\",\n    \"status\": \"refund_pending\",\n    \"uid\": \"00000000-0000-0000-0000-000000000000\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"note\": \"Voided invoice.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/invoices/:uid/cancel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"invoices",
												":uid",
												"cancel"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for invoice."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						},
						{
							"name": "Refund an invoice",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": 4186,\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"paymentUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"reason\": \"requested_by_customer\",\n  \"note\": \"incorrect amount\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v4/invoices/:uid/refund",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"invoices",
										":uid",
										"refund"
									],
									"variable": [
										{
											"key": "uid",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Podium unique identifier for invoice."
										}
									]
								},
								"description": "Refunds an invoice. The invoice must currently have a `status` of `paid`.If an invoice has a `status` of `created` it cannot be refunded, but can be canceled. An invoice can have multiple refunds. The total refunded amount cannot exceed the invoice's `amount`."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": 4186,\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"paymentUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"reason\": \"requested_by_customer\",\n  \"note\": \"incorrect amount\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/invoices/:uid/refund",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"invoices",
												":uid",
												"refund"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for invoice."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"canceledAt\": \"2015-01-23T23:50:07Z\",\n    \"canceledNote\": \"The wrong amount was entered.\",\n    \"channel\": {\n      \"identifier\": \"email@email.com\",\n      \"type\": \"email\"\n    },\n    \"conversationUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"createdAt\": \"2015-01-23T23:50:07Z\",\n    \"currencyRef\": \"USD\",\n    \"customerName\": \"Joe Orange\",\n    \"invoiceNumber\": \"abc-12345-def\",\n    \"lineItems\": [\n      {\n        \"amount\": 1099,\n        \"description\": \"Total\"\n      },\n      {\n        \"amount\": 1099,\n        \"description\": \"Total\"\n      }\n    ],\n    \"location\": {\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"paidAt\": \"2015-01-23T23:50:07Z\",\n    \"paymentNet\": 1000,\n    \"payments\": [\n      {\n        \"bankAccountLast4\": \"1245\",\n        \"bankAccountName\": \"The Bank\",\n        \"cardBrand\": \"visa\",\n        \"cardLast4\": \"4242\",\n        \"createdAt\": \"2015-01-23T23:50:07Z\",\n        \"fee\": 99,\n        \"interchangeFee\": 50,\n        \"refunds\": [\n          {\n            \"amount\": 100,\n            \"createdAt\": \"2015-01-23T23:50:07Z\",\n            \"notes\": [\n              \"The product did not function properly.\",\n              \"The product did not function properly.\"\n            ],\n            \"reason\": \"requested_by_customer\",\n            \"settledAt\": \"2015-01-23T23:50:07Z\",\n            \"status\": \"failed_lost_or_stolen\"\n          },\n          {\n            \"amount\": 100,\n            \"createdAt\": \"2015-01-23T23:50:07Z\",\n            \"notes\": [\n              \"The product did not function properly.\",\n              \"The product did not function properly.\"\n            ],\n            \"reason\": \"duplicate\",\n            \"settledAt\": \"2015-01-23T23:50:07Z\",\n            \"status\": \"failed_charge_for_pending_refund_disputed\"\n          }\n        ],\n        \"settledAt\": \"2015-01-23T23:50:07Z\",\n        \"status\": \"refund_pending\",\n        \"uid\": \"00000000-0000-0000-0000-000000000000\"\n      },\n      {\n        \"bankAccountLast4\": \"1245\",\n        \"bankAccountName\": \"The Bank\",\n        \"cardBrand\": \"visa\",\n        \"cardLast4\": \"4242\",\n        \"createdAt\": \"2015-01-23T23:50:07Z\",\n        \"fee\": 99,\n        \"interchangeFee\": 50,\n        \"refunds\": [\n          {\n            \"amount\": 100,\n            \"createdAt\": \"2015-01-23T23:50:07Z\",\n            \"notes\": [\n              \"The product did not function properly.\",\n              \"The product did not function properly.\"\n            ],\n            \"reason\": \"duplicate\",\n            \"settledAt\": \"2015-01-23T23:50:07Z\",\n            \"status\": \"succeeded\"\n          },\n          {\n            \"amount\": 100,\n            \"createdAt\": \"2015-01-23T23:50:07Z\",\n            \"notes\": [\n              \"The product did not function properly.\",\n              \"The product did not function properly.\"\n            ],\n            \"reason\": \"requested_by_customer\",\n            \"settledAt\": \"2015-01-23T23:50:07Z\",\n            \"status\": \"failed_lost_or_stolen\"\n          }\n        ],\n        \"settledAt\": \"2015-01-23T23:50:07Z\",\n        \"status\": \"refund_failed\",\n        \"uid\": \"00000000-0000-0000-0000-000000000000\"\n      }\n    ],\n    \"readerUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"requester\": \"John Apple\",\n    \"status\": \"refund_pending\",\n    \"uid\": \"00000000-0000-0000-0000-000000000000\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": 4186,\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"paymentUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"reason\": \"requested_by_customer\",\n  \"note\": \"incorrect amount\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/invoices/:uid/refund",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"invoices",
												":uid",
												"refund"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for invoice."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Payment",
					"item": [
						{
							"name": "Get a payment.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/payments/:uid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"payments",
										":uid"
									],
									"variable": [
										{
											"key": "uid",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Podium unique identifier for payment."
										}
									]
								},
								"description": "Gets a single payment by its uid."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/payments/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"payments",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for payment."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"bankAccountLast4\": \"1234\",\n    \"bankAccountName\": \"The Bank\",\n    \"cardBrand\": \"visa\",\n    \"cardLast4\": \"4242\",\n    \"createdAt\": \"2015-01-23T23:50:07Z\",\n    \"fee\": 99,\n    \"interchangeFee\": 50,\n    \"settledAt\": \"2015-01-23T23:50:07Z\",\n    \"status\": \"refund_failed\",\n    \"uid\": \"00000000-0000-0000-0000-000000000000\",\n    \"updatedAt\": \"2015-01-23T23:50:07Z\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/payments/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"payments",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for payment."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Reader",
					"item": [
						{
							"name": "Get a card reader.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/readers/:uid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"readers",
										":uid"
									],
									"variable": [
										{
											"key": "uid",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Podium unique identifier for reader."
										}
									]
								},
								"description": "Gets a single card reader by its uid."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/readers/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"readers",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for reader."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"createdAt\": \"2015-01-23T23:50:07Z\",\n    \"label\": \"ve\",\n    \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"status\": \"active\",\n    \"uid\": \"00000000-0000-0000-0000-000000000000\",\n    \"updatedAt\": \"2015-01-23T23:50:07Z\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/readers/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"readers",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for reader."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Refund",
					"item": [
						{
							"name": "Create a refund.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"amount\": 4186,\n  \"channelIdentifier\": \"email@email.com\",\n  \"customerName\": \"Barry Grape\",\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"readerUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"reason\": \"fraudulent\",\n  \"accountUid\": \"00000000-0000-0000-0000-000000000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v4/refunds",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"refunds"
									]
								},
								"description": "Creates a refund. (see note)\n\n  **Use with caution.** This action creates an Unlinked Refund that is not associated with an\n  Podium Invoice or Payment. This current implementation *only works*\n  with a Podium Payment Card Reader, reading the customer's credit card data\n  before debiting the refunded amount.\n  \n  **Upcoming change:** When this resource supports refunding a Podium Invoice,\n  `/invoices/uid/refund` is planned to be deprecated.\n"
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": 4186,\n  \"channelIdentifier\": \"email@email.com\",\n  \"customerName\": \"Barry Grape\",\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"readerUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"reason\": \"fraudulent\",\n  \"accountUid\": \"00000000-0000-0000-0000-000000000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/refunds",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"refunds"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"amount\": 100,\n    \"cardBrand\": \"visa\",\n    \"cardLast4\": \"4242\",\n    \"createdAt\": \"2015-01-23T23:50:07Z\",\n    \"location\": {\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"notes\": [\n      \"The product did not function properly.\",\n      \"The product did not function properly.\"\n    ],\n    \"reason\": \"duplicate\",\n    \"settledAt\": \"2015-01-23T23:50:07Z\",\n    \"status\": \"failed_unknown\",\n    \"uid\": \"00000000-0000-0000-0000-000000000000\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"amount\": 4186,\n  \"channelIdentifier\": \"email@email.com\",\n  \"customerName\": \"Barry Grape\",\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"readerUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"reason\": \"fraudulent\",\n  \"accountUid\": \"00000000-0000-0000-0000-000000000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/refunds",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"refunds"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						},
						{
							"name": "Get a refund.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/refunds/:uid?locationUid=00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"refunds",
										":uid"
									],
									"query": [
										{
											"key": "locationUid",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Podium unique identifier for location."
										}
									],
									"variable": [
										{
											"key": "uid",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Podium unique identifier for refund."
										}
									]
								},
								"description": "Gets a refund that has previously been created."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/refunds/:uid?locationUid=00000000-0000-0000-0000-000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"refunds",
												":uid"
											],
											"query": [
												{
													"key": "locationUid",
													"value": "00000000-0000-0000-0000-000000000000"
												}
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for refund."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"amount\": 100,\n    \"cardBrand\": \"visa\",\n    \"cardLast4\": \"4242\",\n    \"createdAt\": \"2015-01-23T23:50:07Z\",\n    \"location\": {\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"notes\": [\n      \"The product did not function properly.\",\n      \"The product did not function properly.\"\n    ],\n    \"reason\": \"fraudulent\",\n    \"settledAt\": \"2015-01-23T23:50:07Z\",\n    \"status\": \"created\",\n    \"uid\": \"00000000-0000-0000-0000-000000000000\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/refunds/:uid?locationUid=00000000-0000-0000-0000-000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"refunds",
												":uid"
											],
											"query": [
												{
													"key": "locationUid",
													"value": "00000000-0000-0000-0000-000000000000"
												}
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for refund."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						}
					],
					"auth": {
						"type": "oauth2",
						"oauth2": [
							{
								"key": "client_authentication",
								"value": "body",
								"type": "string"
							},
							{
								"key": "accessTokenUrl",
								"value": "https://accounts.podium.com/oauth/token",
								"type": "string"
							},
							{
								"key": "authUrl",
								"value": "https://accounts.podium.com/oauth/authorize",
								"type": "string"
							},
							{
								"key": "state",
								"value": "hold",
								"type": "string"
							},
							{
								"key": "scope",
								"value": "read_payments write_payments",
								"type": "string"
							},
							{
								"key": "addTokenTo",
								"value": "header",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "client_authentication",
						"value": "body",
						"type": "string"
					},
					{
						"key": "useBrowser",
						"value": true,
						"type": "boolean"
					},
					{
						"key": "state",
						"value": "hold",
						"type": "string"
					},
					{
						"key": "clientSecret",
						"value": "<enter clientSecret from dev portal>",
						"type": "string"
					},
					{
						"key": "clientId",
						"value": "<enter clientID from dev portal>",
						"type": "string"
					},
					{
						"key": "accessTokenUrl",
						"value": "https://accounts.podium.com/oauth/token",
						"type": "string"
					},
					{
						"key": "authUrl",
						"value": "https://accounts.podium.com/oauth/authorize",
						"type": "string"
					},
					{
						"key": "scope",
						"value": "write_payments read_payments",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "REVIEWS",
			"item": [
				{
					"name": "Review",
					"item": [
						{
							"name": "List all reviews.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/reviews?createdAt[gt]=2015-01-23T23:50:07Z&createdAt[gte]=2015-01-23T23:50:07Z&createdAt[lt]=2015-01-23T23:50:07Z&createdAt[lte]=2015-01-23T23:50:07Z&limit=10&cursor=MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"reviews"
									],
									"query": [
										{
											"key": "createdAt[gt]",
											"value": "2015-01-23T23:50:07Z",
											"description": "Filter on the `createdAt` date."
										},
										{
											"key": "createdAt[gte]",
											"value": "2015-01-23T23:50:07Z",
											"description": "Filter on the `createdAt` date."
										},
										{
											"key": "createdAt[lt]",
											"value": "2015-01-23T23:50:07Z",
											"description": "Filter on the `createdAt` date."
										},
										{
											"key": "createdAt[lte]",
											"value": "2015-01-23T23:50:07Z",
											"description": "Filter on the `createdAt` date."
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Max number of items to return per request. Defaults to `10`."
										},
										{
											"key": "cursor",
											"value": "MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw",
											"description": "Retrieves the page of items that comes after the `cursor`."
										}
									]
								},
								"description": "List of all the reviews that you have access to. The reviews are sorted by `createdAt` date, with the most recent appearing first.\n\nIf the `cursor` parameter is used then all other parameters will be ignored. This is to avoid confusion if passing both a `cursor` and other parameters which would change what data is being returned."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/reviews?createdAt[gt]=2015-01-23T23:50:07Z&createdAt[gte]=2015-01-23T23:50:07Z&createdAt[lt]=2015-01-23T23:50:07Z&createdAt[lte]=2015-01-23T23:50:07Z&limit=10&cursor=MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"reviews"
											],
											"query": [
												{
													"key": "createdAt[gt]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[gte]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[lt]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[lte]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "cursor",
													"value": "MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"attributions\": [\n        {\n          \"apiClientUid\": \"00000000-0000-0000-0000-000000000000\",\n          \"reviewInvitationUid\": \"00000000-0000-0000-0000-000000000000\",\n          \"userUid\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        {\n          \"apiClientUid\": \"00000000-0000-0000-0000-000000000000\",\n          \"reviewInvitationUid\": \"00000000-0000-0000-0000-000000000000\",\n          \"userUid\": \"00000000-0000-0000-0000-000000000000\"\n        }\n      ],\n      \"author\": {\n        \"id\": \"2412341\",\n        \"name\": \"Joe Orange\"\n      },\n      \"createdAt\": \"2015-01-23T23:50:07Z\",\n      \"isRecommendation\": false,\n      \"locations\": [\n        {\n          \"uid\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        {\n          \"uid\": \"00000000-0000-0000-0000-000000000000\"\n        }\n      ],\n      \"needsResponse\": false,\n      \"responses\": [\n        {\n          \"body\": \"Thanks Joe for leaving us a review!\",\n          \"createdAt\": \"2015-01-23T23:50:07Z\",\n          \"siteAuthorName\": \"John Apple\"\n        },\n        {\n          \"body\": \"Thanks Joe for leaving us a review!\",\n          \"createdAt\": \"2015-01-23T23:50:07Z\",\n          \"siteAuthorName\": \"John Apple\"\n        }\n      ],\n      \"review\": {\n        \"body\": \"We love our new sofa from Sofa Plus! It is comfortable and stylish.\",\n        \"rating\": 5,\n        \"siteName\": \"Google\",\n        \"siteReviewId\": \"2390afs293fj\",\n        \"url\": \"https://www.podium.com/\"\n      },\n      \"uid\": \"00000000-0000-0000-0000-000000000000\",\n      \"updatedAt\": \"2015-01-23T23:50:07Z\"\n    },\n    {\n      \"attributions\": [\n        {\n          \"apiClientUid\": \"00000000-0000-0000-0000-000000000000\",\n          \"reviewInvitationUid\": \"00000000-0000-0000-0000-000000000000\",\n          \"userUid\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        {\n          \"apiClientUid\": \"00000000-0000-0000-0000-000000000000\",\n          \"reviewInvitationUid\": \"00000000-0000-0000-0000-000000000000\",\n          \"userUid\": \"00000000-0000-0000-0000-000000000000\"\n        }\n      ],\n      \"author\": {\n        \"id\": \"2412341\",\n        \"name\": \"Joe Orange\"\n      },\n      \"createdAt\": \"2015-01-23T23:50:07Z\",\n      \"isRecommendation\": false,\n      \"locations\": [\n        {\n          \"uid\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        {\n          \"uid\": \"00000000-0000-0000-0000-000000000000\"\n        }\n      ],\n      \"needsResponse\": false,\n      \"responses\": [\n        {\n          \"body\": \"Thanks Joe for leaving us a review!\",\n          \"createdAt\": \"2015-01-23T23:50:07Z\",\n          \"siteAuthorName\": \"John Apple\"\n        },\n        {\n          \"body\": \"Thanks Joe for leaving us a review!\",\n          \"createdAt\": \"2015-01-23T23:50:07Z\",\n          \"siteAuthorName\": \"John Apple\"\n        }\n      ],\n      \"review\": {\n        \"body\": \"We love our new sofa from Sofa Plus! It is comfortable and stylish.\",\n        \"rating\": 5,\n        \"siteName\": \"Google\",\n        \"siteReviewId\": \"2390afs293fj\",\n        \"url\": \"https://www.podium.com/\"\n      },\n      \"uid\": \"00000000-0000-0000-0000-000000000000\",\n      \"updatedAt\": \"2015-01-23T23:50:07Z\"\n    }\n  ],\n  \"metadata\": {\n    \"nextCursor\": \"MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw\",\n    \"previousCursor\": \"MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw\",\n    \"totalItems\": -61664327,\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/reviews?createdAt[gt]=2015-01-23T23:50:07Z&createdAt[gte]=2015-01-23T23:50:07Z&createdAt[lt]=2015-01-23T23:50:07Z&createdAt[lte]=2015-01-23T23:50:07Z&limit=10&cursor=MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"reviews"
											],
											"query": [
												{
													"key": "createdAt[gt]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[gte]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[lt]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[lte]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "cursor",
													"value": "MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						},
						{
							"name": "Get a review.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/reviews/:uid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"reviews",
										":uid"
									],
									"variable": [
										{
											"key": "uid",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Podium unique identifier for review."
										}
									]
								},
								"description": "Gets a single review by its uid."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/reviews/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"reviews",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for review."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"attributions\": [\n      {\n        \"apiClientUid\": \"00000000-0000-0000-0000-000000000000\",\n        \"reviewInvitationUid\": \"00000000-0000-0000-0000-000000000000\",\n        \"userUid\": \"00000000-0000-0000-0000-000000000000\"\n      },\n      {\n        \"apiClientUid\": \"00000000-0000-0000-0000-000000000000\",\n        \"reviewInvitationUid\": \"00000000-0000-0000-0000-000000000000\",\n        \"userUid\": \"00000000-0000-0000-0000-000000000000\"\n      }\n    ],\n    \"author\": {\n      \"id\": \"2412341\",\n      \"name\": \"Joe Orange\"\n    },\n    \"createdAt\": \"2015-01-23T23:50:07Z\",\n    \"isRecommendation\": false,\n    \"locations\": [\n      {\n        \"uid\": \"00000000-0000-0000-0000-000000000000\"\n      },\n      {\n        \"uid\": \"00000000-0000-0000-0000-000000000000\"\n      }\n    ],\n    \"needsResponse\": false,\n    \"responses\": [\n      {\n        \"body\": \"Thanks Joe for leaving us a review!\",\n        \"createdAt\": \"2015-01-23T23:50:07Z\",\n        \"siteAuthorName\": \"John Apple\"\n      },\n      {\n        \"body\": \"Thanks Joe for leaving us a review!\",\n        \"createdAt\": \"2015-01-23T23:50:07Z\",\n        \"siteAuthorName\": \"John Apple\"\n      }\n    ],\n    \"review\": {\n      \"body\": \"We love our new sofa from Sofa Plus! It is comfortable and stylish.\",\n      \"rating\": 5,\n      \"siteName\": \"Google\",\n      \"siteReviewId\": \"2390afs293fj\",\n      \"url\": \"https://www.podium.com/\"\n    },\n    \"uid\": \"00000000-0000-0000-0000-000000000000\",\n    \"updatedAt\": \"2015-01-23T23:50:07Z\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/reviews/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"reviews",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for review."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Review Invite",
					"item": [
						{
							"name": "List all review invites.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/reviews/invites?createdAt[gt]=2015-01-23T23:50:07Z&createdAt[gte]=2015-01-23T23:50:07Z&createdAt[lt]=2015-01-23T23:50:07Z&createdAt[lte]=2015-01-23T23:50:07Z&senderUid=00000000-0000-0000-0000-000000000000&limit=10&cursor=MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"reviews",
										"invites"
									],
									"query": [
										{
											"key": "createdAt[gt]",
											"value": "2015-01-23T23:50:07Z",
											"description": "Filter on the `createdAt` date."
										},
										{
											"key": "createdAt[gte]",
											"value": "2015-01-23T23:50:07Z",
											"description": "Filter on the `createdAt` date."
										},
										{
											"key": "createdAt[lt]",
											"value": "2015-01-23T23:50:07Z",
											"description": "Filter on the `createdAt` date."
										},
										{
											"key": "createdAt[lte]",
											"value": "2015-01-23T23:50:07Z",
											"description": "Filter on the `createdAt` date."
										},
										{
											"key": "senderUid",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "Filter by the senderUid"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Max number of items to return per request. Defaults to `10`."
										},
										{
											"key": "cursor",
											"value": "MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw",
											"description": "Retrieves the page of items that comes after the `cursor`."
										}
									]
								},
								"description": "List of all the review invites that you have access to. The review invites are sorted by `createdAt` date, with the most recent appearing first.\n\nIf the `cursor` parameter is used then all other parameters will be ignored. This is to avoid confusion if passing both a `cursor` and other parameters which would change what data is being returned."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/reviews/invites?createdAt[gt]=2015-01-23T23:50:07Z&createdAt[gte]=2015-01-23T23:50:07Z&createdAt[lt]=2015-01-23T23:50:07Z&createdAt[lte]=2015-01-23T23:50:07Z&senderUid=00000000-0000-0000-0000-000000000000&limit=10&cursor=MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"reviews",
												"invites"
											],
											"query": [
												{
													"key": "createdAt[gt]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[gte]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[lt]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[lte]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "senderUid",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "cursor",
													"value": "MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"attributions\": [\n        {\n          \"reviewAuthor\": \"Joe Orange\",\n          \"reviewBody\": \"Great service!\",\n          \"reviewPublishedAt\": \"2015-01-23T23:50:07Z\",\n          \"reviewRating\": 5,\n          \"reviewUid\": \"00000000-0000-0000-0000-000000000000\",\n          \"siteName\": \"google\"\n        },\n        {\n          \"reviewAuthor\": \"Joe Orange\",\n          \"reviewBody\": \"Great service!\",\n          \"reviewPublishedAt\": \"2015-01-23T23:50:07Z\",\n          \"reviewRating\": 5,\n          \"reviewUid\": \"00000000-0000-0000-0000-000000000000\",\n          \"siteName\": \"google\"\n        }\n      ],\n      \"channel\": {\n        \"identifier\": \"email@email.com\",\n        \"type\": \"email\"\n      },\n      \"conversationItemUid\": \"00000000-0000-0000-0000-000000000000\",\n      \"createdAt\": \"2015-01-23T23:50:07Z\",\n      \"customerName\": \"John Apple\",\n      \"deliveryStatus\": \"sent\",\n      \"languages\": [\n        \"EN\",\n        \"EN\"\n      ],\n      \"linkClicked\": false,\n      \"linkClickedAt\": \"2015-01-23T23:50:07Z\",\n      \"location\": {\n        \"organizationUid\": \"00000000-0000-0000-0000-000000000000\",\n        \"uid\": \"00000000-0000-0000-0000-000000000000\"\n      },\n      \"sender\": {\n        \"name\": \"Jack Grape\",\n        \"sentThrough\": \"generated_link_only\",\n        \"type\": \"user\",\n        \"uid\": \"00000000-0000-0000-0000-000000000000\"\n      },\n      \"shortUrl\": \"https://podium.co/QDNrE1v\",\n      \"test\": false,\n      \"uid\": \"00000000-0000-0000-0000-000000000000\",\n      \"url\": \"http://app.podium.com/#/91f85f79-185c-46cb-830d-79f259bb2822?v2=true\"\n    },\n    {\n      \"attributions\": [\n        {\n          \"reviewAuthor\": \"Joe Orange\",\n          \"reviewBody\": \"Great service!\",\n          \"reviewPublishedAt\": \"2015-01-23T23:50:07Z\",\n          \"reviewRating\": 5,\n          \"reviewUid\": \"00000000-0000-0000-0000-000000000000\",\n          \"siteName\": \"google\"\n        },\n        {\n          \"reviewAuthor\": \"Joe Orange\",\n          \"reviewBody\": \"Great service!\",\n          \"reviewPublishedAt\": \"2015-01-23T23:50:07Z\",\n          \"reviewRating\": 5,\n          \"reviewUid\": \"00000000-0000-0000-0000-000000000000\",\n          \"siteName\": \"google\"\n        }\n      ],\n      \"channel\": {\n        \"identifier\": \"email@email.com\",\n        \"type\": \"email\"\n      },\n      \"conversationItemUid\": \"00000000-0000-0000-0000-000000000000\",\n      \"createdAt\": \"2015-01-23T23:50:07Z\",\n      \"customerName\": \"John Apple\",\n      \"deliveryStatus\": \"pending\",\n      \"languages\": [\n        \"EN\",\n        \"EN\"\n      ],\n      \"linkClicked\": false,\n      \"linkClickedAt\": \"2015-01-23T23:50:07Z\",\n      \"location\": {\n        \"organizationUid\": \"00000000-0000-0000-0000-000000000000\",\n        \"uid\": \"00000000-0000-0000-0000-000000000000\"\n      },\n      \"sender\": {\n        \"name\": \"Jack Grape\",\n        \"sentThrough\": \"feedback\",\n        \"type\": \"user\",\n        \"uid\": \"00000000-0000-0000-0000-000000000000\"\n      },\n      \"shortUrl\": \"https://podium.co/QDNrE1v\",\n      \"test\": false,\n      \"uid\": \"00000000-0000-0000-0000-000000000000\",\n      \"url\": \"http://app.podium.com/#/91f85f79-185c-46cb-830d-79f259bb2822?v2=true\"\n    }\n  ],\n  \"metadata\": {\n    \"nextCursor\": \"MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw\",\n    \"previousCursor\": \"MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw\",\n    \"totalItems\": -71200582,\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/reviews/invites?createdAt[gt]=2015-01-23T23:50:07Z&createdAt[gte]=2015-01-23T23:50:07Z&createdAt[lt]=2015-01-23T23:50:07Z&createdAt[lte]=2015-01-23T23:50:07Z&senderUid=00000000-0000-0000-0000-000000000000&limit=10&cursor=MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"reviews",
												"invites"
											],
											"query": [
												{
													"key": "createdAt[gt]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[gte]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[lt]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[lte]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "senderUid",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "cursor",
													"value": "MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						},
						{
							"name": "Create a review invite link.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"email\": \"aute deserunt\",\n  \"phoneNumber\": \"ullamco aute non qui proident\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v4/reviews/invites",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"reviews",
										"invites"
									]
								},
								"description": "Create a review invite link."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"email\": \"aute deserunt\",\n  \"phoneNumber\": \"ullamco aute non qui proident\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/reviews/invites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"reviews",
												"invites"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"attributions\": [\n      {\n        \"reviewAuthor\": \"Joe Orange\",\n        \"reviewBody\": \"Great service!\",\n        \"reviewPublishedAt\": \"2015-01-23T23:50:07Z\",\n        \"reviewRating\": 5,\n        \"reviewUid\": \"00000000-0000-0000-0000-000000000000\",\n        \"siteName\": \"google\"\n      },\n      {\n        \"reviewAuthor\": \"Joe Orange\",\n        \"reviewBody\": \"Great service!\",\n        \"reviewPublishedAt\": \"2015-01-23T23:50:07Z\",\n        \"reviewRating\": 5,\n        \"reviewUid\": \"00000000-0000-0000-0000-000000000000\",\n        \"siteName\": \"google\"\n      }\n    ],\n    \"channel\": {\n      \"identifier\": \"email@email.com\",\n      \"type\": \"email\"\n    },\n    \"conversationItemUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"createdAt\": \"2015-01-23T23:50:07Z\",\n    \"customerName\": \"John Apple\",\n    \"deliveryStatus\": \"pending\",\n    \"languages\": [\n      \"EN\",\n      \"EN\"\n    ],\n    \"linkClicked\": false,\n    \"linkClickedAt\": \"2015-01-23T23:50:07Z\",\n    \"location\": {\n      \"organizationUid\": \"00000000-0000-0000-0000-000000000000\",\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"sender\": {\n      \"name\": \"Jack Grape\",\n      \"sentThrough\": \"payments\",\n      \"type\": \"user\",\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"shortUrl\": \"https://podium.co/QDNrE1v\",\n    \"test\": false,\n    \"uid\": \"00000000-0000-0000-0000-000000000000\",\n    \"url\": \"http://app.podium.com/#/91f85f79-185c-46cb-830d-79f259bb2822?v2=true\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"email\": \"aute deserunt\",\n  \"phoneNumber\": \"ullamco aute non qui proident\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/reviews/invites",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"reviews",
												"invites"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						},
						{
							"name": "Get a review invite.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/reviews/invites/:uid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"reviews",
										"invites",
										":uid"
									],
									"variable": [
										{
											"key": "uid",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Podium unique identifier for review invite."
										}
									]
								},
								"description": "Get a single review invite by its uid."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/reviews/invites/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"reviews",
												"invites",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for review invite."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"attributions\": [\n      {\n        \"reviewAuthor\": \"Joe Orange\",\n        \"reviewBody\": \"Great service!\",\n        \"reviewPublishedAt\": \"2015-01-23T23:50:07Z\",\n        \"reviewRating\": 5,\n        \"reviewUid\": \"00000000-0000-0000-0000-000000000000\",\n        \"siteName\": \"google\"\n      },\n      {\n        \"reviewAuthor\": \"Joe Orange\",\n        \"reviewBody\": \"Great service!\",\n        \"reviewPublishedAt\": \"2015-01-23T23:50:07Z\",\n        \"reviewRating\": 5,\n        \"reviewUid\": \"00000000-0000-0000-0000-000000000000\",\n        \"siteName\": \"google\"\n      }\n    ],\n    \"channel\": {\n      \"identifier\": \"email@email.com\",\n      \"type\": \"email\"\n    },\n    \"conversationItemUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"createdAt\": \"2015-01-23T23:50:07Z\",\n    \"customerName\": \"John Apple\",\n    \"deliveryStatus\": \"pending\",\n    \"languages\": [\n      \"EN\",\n      \"EN\"\n    ],\n    \"linkClicked\": false,\n    \"linkClickedAt\": \"2015-01-23T23:50:07Z\",\n    \"location\": {\n      \"organizationUid\": \"00000000-0000-0000-0000-000000000000\",\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"sender\": {\n      \"name\": \"Jack Grape\",\n      \"sentThrough\": \"payments\",\n      \"type\": \"user\",\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    \"shortUrl\": \"https://podium.co/QDNrE1v\",\n    \"test\": false,\n    \"uid\": \"00000000-0000-0000-0000-000000000000\",\n    \"url\": \"http://app.podium.com/#/91f85f79-185c-46cb-830d-79f259bb2822?v2=true\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/reviews/invites/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"reviews",
												"invites",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for review invite."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Review Sites Summary",
					"item": [
						{
							"name": "Summary of all connected review sites.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/reviews/sites/summary?createdAt[gt]=2015-01-23T23:50:07Z&createdAt[gte]=2015-01-23T23:50:07Z&createdAt[lt]=2015-01-23T23:50:07Z&createdAt[lte]=2015-01-23T23:50:07Z&locationUids=00000000-0000-0000-0000-000000000000&locationUids=00000000-0000-0000-0000-000000000000&userUid=00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"reviews",
										"sites",
										"summary"
									],
									"query": [
										{
											"key": "createdAt[gt]",
											"value": "2015-01-23T23:50:07Z",
											"description": "Filter on the `createdAt` date."
										},
										{
											"key": "createdAt[gte]",
											"value": "2015-01-23T23:50:07Z",
											"description": "Filter on the `createdAt` date."
										},
										{
											"key": "createdAt[lt]",
											"value": "2015-01-23T23:50:07Z",
											"description": "Filter on the `createdAt` date."
										},
										{
											"key": "createdAt[lte]",
											"value": "2015-01-23T23:50:07Z",
											"description": "Filter on the `createdAt` date."
										},
										{
											"key": "locationUids",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "List of locations to filter the results by."
										},
										{
											"key": "locationUids",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "List of locations to filter the results by."
										},
										{
											"key": "userUid",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "Filter on the user uid that the reviews are attributed to."
										}
									]
								},
								"description": "Returns a summary of reviews grouped by the site they are from. If no `locationUids` parameter is used then the data will be based on all locations that the caller has access to."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/reviews/sites/summary?createdAt[gt]=2015-01-23T23:50:07Z&createdAt[gte]=2015-01-23T23:50:07Z&createdAt[lt]=2015-01-23T23:50:07Z&createdAt[lte]=2015-01-23T23:50:07Z&locationUids=00000000-0000-0000-0000-000000000000&locationUids=00000000-0000-0000-0000-000000000000&userUid=00000000-0000-0000-0000-000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"reviews",
												"sites",
												"summary"
											],
											"query": [
												{
													"key": "createdAt[gt]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[gte]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[lt]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[lte]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "locationUids",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "locationUids",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "userUid",
													"value": "00000000-0000-0000-0000-000000000000"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"averageRating\": 4.839542760372566,\n      \"reviewCount\": 2362,\n      \"siteName\": \"google\"\n    },\n    {\n      \"averageRating\": 4.839542760372566,\n      \"reviewCount\": 2362,\n      \"siteName\": \"google\"\n    }\n  ],\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/reviews/sites/summary?createdAt[gt]=2015-01-23T23:50:07Z&createdAt[gte]=2015-01-23T23:50:07Z&createdAt[lt]=2015-01-23T23:50:07Z&createdAt[lte]=2015-01-23T23:50:07Z&locationUids=00000000-0000-0000-0000-000000000000&locationUids=00000000-0000-0000-0000-000000000000&userUid=00000000-0000-0000-0000-000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"reviews",
												"sites",
												"summary"
											],
											"query": [
												{
													"key": "createdAt[gt]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[gte]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[lt]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[lte]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "locationUids",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "locationUids",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "userUid",
													"value": "00000000-0000-0000-0000-000000000000"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Review Summary",
					"item": [
						{
							"name": "Summary of all reviews",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/reviews/summary?createdAt[gt]=2015-01-23T23:50:07Z&createdAt[gte]=2015-01-23T23:50:07Z&createdAt[lt]=2015-01-23T23:50:07Z&createdAt[lte]=2015-01-23T23:50:07Z&locationUids=00000000-0000-0000-0000-000000000000&locationUids=00000000-0000-0000-0000-000000000000&userUid=00000000-0000-0000-0000-000000000000",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"reviews",
										"summary"
									],
									"query": [
										{
											"key": "createdAt[gt]",
											"value": "2015-01-23T23:50:07Z",
											"description": "Filter on the `createdAt` date."
										},
										{
											"key": "createdAt[gte]",
											"value": "2015-01-23T23:50:07Z",
											"description": "Filter on the `createdAt` date."
										},
										{
											"key": "createdAt[lt]",
											"value": "2015-01-23T23:50:07Z",
											"description": "Filter on the `createdAt` date."
										},
										{
											"key": "createdAt[lte]",
											"value": "2015-01-23T23:50:07Z",
											"description": "Filter on the `createdAt` date."
										},
										{
											"key": "locationUids",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "List of locations to filter the results by."
										},
										{
											"key": "locationUids",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "List of locations to filter the results by."
										},
										{
											"key": "userUid",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "Filter on the user uid that the reviews are attributed to."
										}
									]
								},
								"description": "Returns a summary of reviews for each location. If no `locationUids` parameter is used then the data will be based on all locations that the caller has access to."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/reviews/summary?createdAt[gt]=2015-01-23T23:50:07Z&createdAt[gte]=2015-01-23T23:50:07Z&createdAt[lt]=2015-01-23T23:50:07Z&createdAt[lte]=2015-01-23T23:50:07Z&locationUids=00000000-0000-0000-0000-000000000000&locationUids=00000000-0000-0000-0000-000000000000&userUid=00000000-0000-0000-0000-000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"reviews",
												"summary"
											],
											"query": [
												{
													"key": "createdAt[gt]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[gte]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[lt]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[lte]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "locationUids",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "locationUids",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "userUid",
													"value": "00000000-0000-0000-0000-000000000000"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"averageRating\": 4.839542760372566,\n      \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n      \"reviewCount\": 2362\n    },\n    {\n      \"averageRating\": 4.839542760372566,\n      \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n      \"reviewCount\": 2362\n    }\n  ],\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/reviews/summary?createdAt[gt]=2015-01-23T23:50:07Z&createdAt[gte]=2015-01-23T23:50:07Z&createdAt[lt]=2015-01-23T23:50:07Z&createdAt[lte]=2015-01-23T23:50:07Z&locationUids=00000000-0000-0000-0000-000000000000&locationUids=00000000-0000-0000-0000-000000000000&userUid=00000000-0000-0000-0000-000000000000",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"reviews",
												"summary"
											],
											"query": [
												{
													"key": "createdAt[gt]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[gte]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[lt]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[lte]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "locationUids",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "locationUids",
													"value": "00000000-0000-0000-0000-000000000000"
												},
												{
													"key": "userUid",
													"value": "00000000-0000-0000-0000-000000000000"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "client_authentication",
						"value": "body",
						"type": "string"
					},
					{
						"key": "useBrowser",
						"value": true,
						"type": "boolean"
					},
					{
						"key": "scope",
						"value": "read_reviews write_reviews",
						"type": "string"
					},
					{
						"key": "clientSecret",
						"value": "<enter clientSecret from dev portal>",
						"type": "string"
					},
					{
						"key": "clientId",
						"value": "<enter clientID from dev portal>",
						"type": "string"
					},
					{
						"key": "accessTokenUrl",
						"value": "https://accounts.podium.com/oauth/token",
						"type": "string"
					},
					{
						"key": "authUrl",
						"value": "https://accounts.podium.com/oauth/authorize",
						"type": "string"
					},
					{
						"key": "state",
						"value": "hold",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "WEBHOOK EVENT TYPES",
			"item": [],
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "client_authentication",
						"value": "body",
						"type": "string"
					},
					{
						"key": "scope",
						"value": "read_contacts read_messages",
						"type": "string"
					},
					{
						"key": "state",
						"value": "hold",
						"type": "string"
					},
					{
						"key": "clientSecret",
						"value": "<enter clientSecret from dev portal>",
						"type": "string"
					},
					{
						"key": "clientId",
						"value": "<enter clientID from dev portal>",
						"type": "string"
					},
					{
						"key": "accessTokenUrl",
						"value": "https://accounts.podium.com/oauth/token",
						"type": "string"
					},
					{
						"key": "authUrl",
						"value": "https://accounts.podium.com/oauth/authorize",
						"type": "string"
					},
					{
						"key": "useBrowser",
						"value": true,
						"type": "boolean"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "WEBHOOK",
			"item": [
				{
					"name": "Webhook",
					"item": [
						{
							"name": "Create a webhook.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"eventTypes\": [\n    \"message.received\"\n  ],\n  \"url\": \"https://www.podium.com/\",\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"organizationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"secret\": \"something-no-one-will-know\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v4/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"webhooks"
									]
								},
								"description": "Create a new webhook to receive events from a location or an organization. One of `locationUid` or\n`organizationUid` is required. If both are given the `organizationUid` will be used.\n"
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"eventTypes\": [\n    \"message.received\"\n  ],\n  \"url\": \"https://www.podium.com/\",\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"organizationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"secret\": \"something-no-one-will-know\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"webhooks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"createdAt\": \"2015-01-23T23:50:07Z\",\n    \"disabled\": true,\n    \"eventTypes\": [\n      \"message.sent\"\n    ],\n    \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"organizationUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"secret\": \"magna voluptate qui\",\n    \"uid\": \"00000000-0000-0000-0000-000000000000\",\n    \"updatedAt\": \"2015-01-23T23:50:07Z\",\n    \"url\": \"https://www.podium.com/\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"eventTypes\": [\n    \"message.received\"\n  ],\n  \"url\": \"https://www.podium.com/\",\n  \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"organizationUid\": \"00000000-0000-0000-0000-000000000000\",\n  \"secret\": \"something-no-one-will-know\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"webhooks"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						},
						{
							"name": "Delete a webhook.",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/webhooks/:uid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"webhooks",
										":uid"
									],
									"variable": [
										{
											"key": "uid",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Podium unique identifier for webhook."
										}
									]
								},
								"description": "Deletes an existing webhook."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/webhooks/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"webhooks",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for webhook."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"createdAt\": \"2015-01-23T23:50:07Z\",\n    \"disabled\": true,\n    \"eventTypes\": [\n      \"message.sent\"\n    ],\n    \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"organizationUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"secret\": \"magna voluptate qui\",\n    \"uid\": \"00000000-0000-0000-0000-000000000000\",\n    \"updatedAt\": \"2015-01-23T23:50:07Z\",\n    \"url\": \"https://www.podium.com/\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/webhooks/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"webhooks",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for webhook."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						},
						{
							"name": "Get a webhook.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/webhooks/:uid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"webhooks",
										":uid"
									],
									"variable": [
										{
											"key": "uid",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Podium unique identifier for webhook."
										}
									]
								},
								"description": "Get a webhook based on its uid.\n"
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/webhooks/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"webhooks",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for webhook."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"createdAt\": \"2015-01-23T23:50:07Z\",\n    \"disabled\": true,\n    \"eventTypes\": [\n      \"message.sent\"\n    ],\n    \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"organizationUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"secret\": \"magna voluptate qui\",\n    \"uid\": \"00000000-0000-0000-0000-000000000000\",\n    \"updatedAt\": \"2015-01-23T23:50:07Z\",\n    \"url\": \"https://www.podium.com/\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/webhooks/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"webhooks",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for webhook."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						},
						{
							"name": "Update a webhook.",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"disabled\": true,\n  \"eventTypes\": [\n    \"message.received\"\n  ],\n  \"secret\": \"something-no-one-will-know\",\n  \"url\": \"https://www.podium.com/\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v4/webhooks/:uid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"webhooks",
										":uid"
									],
									"variable": [
										{
											"key": "uid",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Podium unique identifier for webhook."
										}
									]
								},
								"description": "Updates an existing webhook to receive events from a location or an organization.\nOne of `locationUid` or `organizationUid` is required, with `organizationUid` taking precedence.\nAll other parameters not provided will be left unchanged.\n"
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"disabled\": true,\n  \"eventTypes\": [\n    \"message.received\"\n  ],\n  \"secret\": \"something-no-one-will-know\",\n  \"url\": \"https://www.podium.com/\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/webhooks/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"webhooks",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for webhook."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"createdAt\": \"2015-01-23T23:50:07Z\",\n    \"disabled\": true,\n    \"eventTypes\": [\n      \"message.sent\"\n    ],\n    \"locationUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"organizationUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"secret\": \"magna voluptate qui\",\n    \"uid\": \"00000000-0000-0000-0000-000000000000\",\n    \"updatedAt\": \"2015-01-23T23:50:07Z\",\n    \"url\": \"https://www.podium.com/\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"disabled\": true,\n  \"eventTypes\": [\n    \"message.received\"\n  ],\n  \"secret\": \"something-no-one-will-know\",\n  \"url\": \"https://www.podium.com/\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/webhooks/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"webhooks",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for webhook."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						}
					]
				}
			],
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "client_authentication",
						"value": "body",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "WORKFLOWS",
			"item": [
				{
					"name": "Data Feed Event",
					"item": [
						{
							"name": "Process an event through a data feed.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"appointment\": {\n    \"endDateTimeInUtc\": \"2019-09-17T14:30:00Z\",\n    \"endLocalDateTime\": \"2019-09-17T09:30:00Z\",\n    \"isCancelled\": false,\n    \"isVideoVisit\": true,\n    \"paymentTypeName\": \"Cash & Insurance\",\n    \"paymentTypeSoId\": \"CASH\",\n    \"purposeId\": \"CLEAN\",\n    \"purposeName\": \"Routine Cleaning\",\n    \"startDateTimeInUtc\": \"2019-09-17T14:00:00Z\",\n    \"startLocalDateTime\": \"2019-09-17T09:00:00Z\",\n    \"statusId\": \"2342\",\n    \"statusName\": \"Pending\",\n    \"typeId\": \"CONS\",\n    \"typeName\": \"Consultation\"\n  },\n  \"contact\": {\n    \"cellPhone\": \"8015551234\",\n    \"email\": \"johnsmith@gmail.net\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Smith\"\n  },\n  \"employee\": {\n    \"email\": \"tyler.adams@abcclinic.com\",\n    \"name\": \"Tyler Adams\"\n  },\n  \"location\": {\n    \"name\": \"ABC Clinic\"\n  },\n  \"payment\": {\n    \"amount\": \"204.93\",\n    \"description\": \"Outstanding Balance for May\",\n    \"invoice\": \"2394208\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v4/dataFeeds/:uid/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"dataFeeds",
										":uid",
										"events"
									],
									"variable": [
										{
											"key": "uid",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Podium unique identifier for data feed."
										}
									]
								},
								"description": "Process an event through a data feed. The request body will be different depending on your data feed setup. Accepts either a single event or a list of events."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"appointment\": {\n    \"endDateTimeInUtc\": \"2019-09-17T14:30:00Z\",\n    \"endLocalDateTime\": \"2019-09-17T09:30:00Z\",\n    \"isCancelled\": false,\n    \"isVideoVisit\": true,\n    \"paymentTypeName\": \"Cash & Insurance\",\n    \"paymentTypeSoId\": \"CASH\",\n    \"purposeId\": \"CLEAN\",\n    \"purposeName\": \"Routine Cleaning\",\n    \"startDateTimeInUtc\": \"2019-09-17T14:00:00Z\",\n    \"startLocalDateTime\": \"2019-09-17T09:00:00Z\",\n    \"statusId\": \"2342\",\n    \"statusName\": \"Pending\",\n    \"typeId\": \"CONS\",\n    \"typeName\": \"Consultation\"\n  },\n  \"contact\": {\n    \"cellPhone\": \"8015551234\",\n    \"email\": \"johnsmith@gmail.net\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Smith\"\n  },\n  \"employee\": {\n    \"email\": \"tyler.adams@abcclinic.com\",\n    \"name\": \"Tyler Adams\"\n  },\n  \"location\": {\n    \"name\": \"ABC Clinic\"\n  },\n  \"payment\": {\n    \"amount\": \"204.93\",\n    \"description\": \"Outstanding Balance for May\",\n    \"invoice\": \"2394208\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/dataFeeds/:uid/events",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"dataFeeds",
												":uid",
												"events"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for data feed."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"dataFeedUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"uid\": \"00000000-0000-0000-0000-000000000000\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"appointment\": {\n    \"endDateTimeInUtc\": \"2019-09-17T14:30:00Z\",\n    \"endLocalDateTime\": \"2019-09-17T09:30:00Z\",\n    \"isCancelled\": false,\n    \"isVideoVisit\": true,\n    \"paymentTypeName\": \"Cash & Insurance\",\n    \"paymentTypeSoId\": \"CASH\",\n    \"purposeId\": \"CLEAN\",\n    \"purposeName\": \"Routine Cleaning\",\n    \"startDateTimeInUtc\": \"2019-09-17T14:00:00Z\",\n    \"startLocalDateTime\": \"2019-09-17T09:00:00Z\",\n    \"statusId\": \"2342\",\n    \"statusName\": \"Pending\",\n    \"typeId\": \"CONS\",\n    \"typeName\": \"Consultation\"\n  },\n  \"contact\": {\n    \"cellPhone\": \"8015551234\",\n    \"email\": \"johnsmith@gmail.net\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Smith\"\n  },\n  \"employee\": {\n    \"email\": \"tyler.adams@abcclinic.com\",\n    \"name\": \"Tyler Adams\"\n  },\n  \"location\": {\n    \"name\": \"ABC Clinic\"\n  },\n  \"payment\": {\n    \"amount\": \"204.93\",\n    \"description\": \"Outstanding Balance for May\",\n    \"invoice\": \"2394208\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v4/dataFeeds/:uid/events",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"dataFeeds",
												":uid",
												"events"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for data feed."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						}
					],
					"auth": {
						"type": "oauth2",
						"oauth2": [
							{
								"key": "client_authentication",
								"value": "body",
								"type": "string"
							},
							{
								"key": "scope",
								"value": "write_data_feed_event",
								"type": "string"
							},
							{
								"key": "accessTokenUrl",
								"value": "https://accounts.podium.com/oauth/token",
								"type": "string"
							},
							{
								"key": "authUrl",
								"value": "https://accounts.podium.com/oauth/authorize",
								"type": "string"
							},
							{
								"key": "addTokenTo",
								"value": "header",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "client_authentication",
						"value": "body",
						"type": "string"
					},
					{
						"key": "useBrowser",
						"value": true,
						"type": "boolean"
					},
					{
						"key": "scope",
						"value": "write_data_feed_event",
						"type": "string"
					},
					{
						"key": "accessTokenUrl",
						"value": "https://accounts.podium.com/oauth/token",
						"type": "string"
					},
					{
						"key": "authUrl",
						"value": "https://accounts.podium.com/oauth/authorize",
						"type": "string"
					},
					{
						"key": "state",
						"value": "hold",
						"type": "string"
					},
					{
						"key": "clientId",
						"value": "<enter clientID from dev portal>",
						"type": "string"
					},
					{
						"key": "clientSecret",
						"value": "<enter clientSecret from dev portal>",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "ACCOUNTS",
			"item": [
				{
					"name": "Location",
					"item": [
						{
							"name": "List all locations.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/locations?search=nisi dolor sed ullamco&searchFields=name&limit=10&cursor=MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"locations"
									],
									"query": [
										{
											"key": "search",
											"value": "nisi dolor sed ullamco",
											"description": "String you would like to search for in the `searchFields` parameter."
										},
										{
											"key": "searchFields",
											"value": "name",
											"description": "A list of the fields where you want to search for the `search` parameters. e.g. ?searchFields[]=name&searchFields[]=displayname"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Max number of items to return per request. Defaults to `10`."
										},
										{
											"key": "cursor",
											"value": "MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw",
											"description": "Retrieves the page of items that comes after the `cursor`."
										}
									]
								},
								"description": "List of all the locations that the caller has access to.\n\nIf the `cursor` parameter is used then all other parameters will be ignored. This is to avoid confusion if passing both a `cursor` and other parameters which would change what data is being returned."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/locations?search=nisi dolor sed ullamco&searchFields=name&limit=10&cursor=MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"locations"
											],
											"query": [
												{
													"key": "search",
													"value": "nisi dolor sed ullamco"
												},
												{
													"key": "searchFields",
													"value": "name"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "cursor",
													"value": "MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"address\": \"1650 Digital Dr, Lehi, UT 84043\",\n      \"archived\": false,\n      \"displayName\": \"Podium, Inc.\",\n      \"name\": \"dolore nisi anim laboris\",\n      \"organizationUid\": \"00000000-0000-0000-0000-000000000000\",\n      \"podiumPhoneNumber\": \"+18017580580\",\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    {\n      \"address\": \"1650 Digital Dr, Lehi, UT 84043\",\n      \"archived\": false,\n      \"displayName\": \"Podium, Inc.\",\n      \"name\": \"re\",\n      \"organizationUid\": \"00000000-0000-0000-0000-000000000000\",\n      \"podiumPhoneNumber\": \"+18017580580\",\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    }\n  ],\n  \"metadata\": {\n    \"nextCursor\": \"MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw\",\n    \"previousCursor\": \"MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw\",\n    \"totalItems\": 9436737,\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/locations?search=nisi dolor sed ullamco&searchFields=name&limit=10&cursor=MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"locations"
											],
											"query": [
												{
													"key": "search",
													"value": "nisi dolor sed ullamco"
												},
												{
													"key": "searchFields",
													"value": "name"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "cursor",
													"value": "MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						},
						{
							"name": "Get a location.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/locations/:uid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"locations",
										":uid"
									],
									"variable": [
										{
											"key": "uid",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Podium unique identifier for location."
										}
									]
								},
								"description": "Gets a single location by its uid."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/locations/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"locations",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for location."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"address\": \"1650 Digital Dr, Lehi, UT 84043\",\n    \"archived\": false,\n    \"displayName\": \"Podium, Inc.\",\n    \"name\": \"sed aliqua qu\",\n    \"organizationUid\": \"00000000-0000-0000-0000-000000000000\",\n    \"podiumPhoneNumber\": \"+18017580580\",\n    \"uid\": \"00000000-0000-0000-0000-000000000000\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/locations/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"locations",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for location."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						}
					],
					"auth": {
						"type": "oauth2",
						"oauth2": [
							{
								"key": "state",
								"value": "hold",
								"type": "string"
							},
							{
								"key": "scope",
								"value": "read_locations",
								"type": "string"
							},
							{
								"key": "authUrl",
								"value": "https://accounts.podium.com/oauth/authorize",
								"type": "string"
							},
							{
								"key": "accessTokenUrl",
								"value": "https://accounts.podium.com/oauth/token",
								"type": "string"
							},
							{
								"key": "client_authentication",
								"value": "body",
								"type": "string"
							},
							{
								"key": "addTokenTo",
								"value": "header",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Organization",
					"item": [
						{
							"name": "Get an organization.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/organizations/:uid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"organizations",
										":uid"
									],
									"variable": [
										{
											"key": "uid",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Podium unique identifier for organization."
										}
									]
								},
								"description": "Gets a single organization by its uid."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/organizations/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"organizations",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for organization."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"archived\": false,\n    \"businessName\": \"Podium, Inc.\",\n    \"createdAt\": \"2015-01-23T23:50:07Z\",\n    \"uid\": \"00000000-0000-0000-0000-000000000000\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/organizations/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"organizations",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for organization."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						}
					],
					"auth": {
						"type": "oauth2",
						"oauth2": [
							{
								"key": "scope",
								"value": "read_locations",
								"type": "string"
							},
							{
								"key": "accessTokenUrl",
								"value": "https://accounts.podium.com/oauth/token",
								"type": "string"
							},
							{
								"key": "authUrl",
								"value": "https://accounts.podium.com/oauth/authorize",
								"type": "string"
							},
							{
								"key": "addTokenTo",
								"value": "header",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "User",
					"item": [
						{
							"name": "List all users.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/users?search=nisi dolor sed ullamco&createdAt[gt]=2015-01-23T23:50:07Z&createdAt[gte]=2015-01-23T23:50:07Z&createdAt[lt]=2015-01-23T23:50:07Z&createdAt[lte]=2015-01-23T23:50:07Z&searchFields=fullName&limit=10&cursor=MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"users"
									],
									"query": [
										{
											"key": "search",
											"value": "nisi dolor sed ullamco",
											"description": "String you would like to search for in the `searchFields` parameter."
										},
										{
											"key": "createdAt[gt]",
											"value": "2015-01-23T23:50:07Z",
											"description": "Filter on the `createdAt` date."
										},
										{
											"key": "createdAt[gte]",
											"value": "2015-01-23T23:50:07Z",
											"description": "Filter on the `createdAt` date."
										},
										{
											"key": "createdAt[lt]",
											"value": "2015-01-23T23:50:07Z",
											"description": "Filter on the `createdAt` date."
										},
										{
											"key": "createdAt[lte]",
											"value": "2015-01-23T23:50:07Z",
											"description": "Filter on the `createdAt` date."
										},
										{
											"key": "searchFields",
											"value": "fullName",
											"description": "A list of the fields where you want to search for the `search` parameters. e.g. ?searchFields[]=name&searchFields[]=displayname"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Max number of items to return per request. Defaults to `10`."
										},
										{
											"key": "cursor",
											"value": "MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw",
											"description": "Retrieves the page of items that comes after the `cursor`."
										}
									]
								},
								"description": "List of all the users that belong to any of the locations that the caller has access to.\n\nIf the `cursor` parameter is used then all other parameters will be ignored. This is to avoid\nconfusion if passing both a `cursor` and other parameters which would change what data is\nbeing returned.\n"
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/users?search=nisi dolor sed ullamco&createdAt[gt]=2015-01-23T23:50:07Z&createdAt[gte]=2015-01-23T23:50:07Z&createdAt[lt]=2015-01-23T23:50:07Z&createdAt[lte]=2015-01-23T23:50:07Z&searchFields=fullName&limit=10&cursor=MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"users"
											],
											"query": [
												{
													"key": "search",
													"value": "nisi dolor sed ullamco"
												},
												{
													"key": "createdAt[gt]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[gte]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[lt]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[lte]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "searchFields",
													"value": "fullName"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "cursor",
													"value": "MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"archived\": false,\n      \"createdAt\": \"2015-01-23T23:50:07Z\",\n      \"email\": \"bob.ross@gmail.com\",\n      \"firstName\": \"Bob\",\n      \"lastName\": \"Ross\",\n      \"locations\": [\n        {\n          \"uid\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        {\n          \"uid\": \"00000000-0000-0000-0000-000000000000\"\n        }\n      ],\n      \"phone\": \"+18013586533\",\n      \"role\": \"Account Owner\",\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    },\n    {\n      \"archived\": false,\n      \"createdAt\": \"2015-01-23T23:50:07Z\",\n      \"email\": \"bob.ross@gmail.com\",\n      \"firstName\": \"Bob\",\n      \"lastName\": \"Ross\",\n      \"locations\": [\n        {\n          \"uid\": \"00000000-0000-0000-0000-000000000000\"\n        },\n        {\n          \"uid\": \"00000000-0000-0000-0000-000000000000\"\n        }\n      ],\n      \"phone\": \"+18013586533\",\n      \"role\": \"Account Owner\",\n      \"uid\": \"00000000-0000-0000-0000-000000000000\"\n    }\n  ],\n  \"metadata\": {\n    \"nextCursor\": \"MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw\",\n    \"previousCursor\": \"MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw\",\n    \"totalItems\": 3023745,\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/users?search=nisi dolor sed ullamco&createdAt[gt]=2015-01-23T23:50:07Z&createdAt[gte]=2015-01-23T23:50:07Z&createdAt[lt]=2015-01-23T23:50:07Z&createdAt[lte]=2015-01-23T23:50:07Z&searchFields=fullName&limit=10&cursor=MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"users"
											],
											"query": [
												{
													"key": "search",
													"value": "nisi dolor sed ullamco"
												},
												{
													"key": "createdAt[gt]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[gte]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[lt]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "createdAt[lte]",
													"value": "2015-01-23T23:50:07Z"
												},
												{
													"key": "searchFields",
													"value": "fullName"
												},
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "cursor",
													"value": "MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAw"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						},
						{
							"name": "Get a user.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v4/users/:uid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v4",
										"users",
										":uid"
									],
									"variable": [
										{
											"key": "uid",
											"value": "00000000-0000-0000-0000-000000000000",
											"description": "(Required) Podium unique identifier for user."
										}
									]
								},
								"description": "Gets a user."
							},
							"response": [
								{
									"name": "Successful response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/users/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"users",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for user."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"archived\": false,\n    \"createdAt\": \"2015-01-23T23:50:07Z\",\n    \"email\": \"bob.ross@gmail.com\",\n    \"firstName\": \"Bob\",\n    \"lastName\": \"Ross\",\n    \"locations\": [\n      {\n        \"uid\": \"00000000-0000-0000-0000-000000000000\"\n      },\n      {\n        \"uid\": \"00000000-0000-0000-0000-000000000000\"\n      }\n    ],\n    \"phone\": \"+18013586533\",\n    \"role\": \"Account Owner\",\n    \"uid\": \"00000000-0000-0000-0000-000000000000\"\n  },\n  \"metadata\": {\n    \"url\": \"https://www.podium.com/\"\n  }\n}"
								},
								{
									"name": "Error response.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v4/users/:uid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v4",
												"users",
												":uid"
											],
											"variable": [
												{
													"key": "uid",
													"value": "00000000-0000-0000-0000-000000000000",
													"description": "(Required) Podium unique identifier for user."
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": -32788308,\n  \"message\": \"mollit ci\",\n  \"moreInfo\": \"labore\"\n}"
								}
							]
						}
					],
					"auth": {
						"type": "oauth2",
						"oauth2": [
							{
								"key": "state",
								"value": "hold",
								"type": "string"
							},
							{
								"key": "scope",
								"value": "read_users",
								"type": "string"
							},
							{
								"key": "accessTokenUrl",
								"value": "https://accounts.podium.com/oauth/token",
								"type": "string"
							},
							{
								"key": "authUrl",
								"value": "https://accounts.podium.com/oauth/authorize",
								"type": "string"
							},
							{
								"key": "addTokenTo",
								"value": "header",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "client_authentication",
						"value": "body",
						"type": "string"
					},
					{
						"key": "scope",
						"value": "read_locations read_organizations read_users",
						"type": "string"
					},
					{
						"key": "useBrowser",
						"value": true,
						"type": "boolean"
					},
					{
						"key": "state",
						"value": "hold",
						"type": "string"
					},
					{
						"key": "clientSecret",
						"value": "<enter clientSecret from dev portal>",
						"type": "string"
					},
					{
						"key": "clientId",
						"value": "<enter clientID from dev portal>",
						"type": "string"
					},
					{
						"key": "authUrl",
						"value": "https://accounts.podium.com/oauth/authorize",
						"type": "string"
					},
					{
						"key": "accessTokenUrl",
						"value": "https://accounts.podium.com/oauth/token",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.podium.com"
		}
	]
}