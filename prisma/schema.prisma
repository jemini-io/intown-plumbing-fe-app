// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id             String   @id @default(cuid())
  email          String   @unique
  name           String?
  passwordDigest String
  role           Role     @default(USER)
  imageId       String? @unique
  image          UserImage? @relation(fields: [imageId], references: [id])
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model UserImage {
  id        String   @id @default(uuid())
  url       String
  publicId  String
  uploadedAt DateTime @default(now())
  user      User?     @relation
}

model AppSetting {
  id     Int    @id @default(autoincrement())
  key    String
  value  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 

  @@unique([key])
}

model Booking {
  id           String      @id @default(uuid())
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  customerId   String
  jobId        String?     @unique
  serviceId    String
  technicianId String?
  scheduledFor DateTime
  status       String
  notes        String?

  // customer     Customer    @relation(fields: [customerId], references: [id])
  // service      Service     @relation(fields: [serviceId], references: [id])
  // technician   Technician? @relation(fields: [technicianId], references: [id])
}
