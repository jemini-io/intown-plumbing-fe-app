{
  "name": "intown-virtual-consultation-form-app",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "dotenv -e .env.test.local next dev | pino-pretty",
    "dev:prod": "dotenv -e .env.prod next dev | pino-pretty",
    "dev:iframe": "cd test && dotenv -e .env.test.local http-server -p 3001",
    "clean": "rm -rf .next && rm -rf node_modules && npm run clean:sdk",
    "build": "npm run generate:sdk && npm run lint && next build",
    "build:test": "npm run generate:sdk && npm run lint && dotenv -e .env.test.local next build",
    "build:prod": "npm run generate:sdk && npm run lint && dotenv -e .env.prod next build",
    "start": "next start",
    "start:prod": "dotenv -e .env.prod next start",
    "lint": "next lint --fix && npx tsc --noEmit",
    "test:whereby": "dotenv -e .env -- tsx test/test-whereby.ts",
    "job-notifications:prod": "dotenv -e .env.prod -- npx tsx lib/tasks/check-send-job-notifications/index.ts",
    "job-notifications:test": "dotenv -e .env.test.local -- npx tsx lib/tasks/check-send-job-notifications/index.ts",
    "job-notifications": "npx tsx lib/tasks/check-send-job-notifications/index.ts",
    "generate:sdk": "tsx scripts/generate-sdk/generate.ts",
    "clean:sdk": "rm -rf lib/servicetitan/generated",
    "db:prod:create": "createdb intown_prod || echo 'Database already exists'",
    "db:dev:create": "createdb intown_dev || echo 'Dev Database already exists'",
    "db:test:create": "createdb intown_test || echo 'Test Database already exists'",
    "migrate:prod": "DATABASE_URL=$DATABASE_URL_PROD npx prisma migrate deploy",
    "migrate:dev": "dotenv -e .env -- npx prisma migrate dev --name init",
    "migrate:test": "dotenv -e .env.test -- npx prisma migrate deploy",
    "import:prod": "DATABASE_URL=$DATABASE_URL_PROD node scripts/importAppSettings.js prod",
    "import:dev": "dotenv -e .env -- node scripts/importAppSettings.js prod",
    "import:test": "dotenv -e .env.test -- node scripts/importAppSettings.js test",
    "setup:prod": "npm run db:prod:create && npm run migrate:prod && npm run import:prod",
    "setup:dev": "npm run db:dev:create && npm run migrate:dev && npm run import:dev",
    "setup:test": "npm run db:test:create && npm run migrate:test && npm run import:test"
  },
  "dependencies": {
    "@prisma/client": "^6.13.0",
    "@stripe/react-stripe-js": "^3.7.0",
    "@stripe/stripe-js": "^7.3.1",
    "axios": "^1.9.0",
    "date-fns-tz": "^3.2.0",
    "js-yaml": "^4.1.0",
    "libphonenumber-js": "^1.12.9",
    "next": "^14.2.28",
    "next-auth": "^4.24.11",
    "next-safe-action": "^8.0.8",
    "pino": "^9.7.0",
    "posthog-js": "^1.258.2",
    "posthog-node": "^5.6.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "stripe": "^18.1.0",
    "yaml": "^2.3.4",
    "zod": "^4.0.17",
    "zustand": "^5.0.5"
  },
  "devDependencies": {
    "@types/node": "^20.11.0",
    "@types/react": "^18.2.0",
    "@types/react-dom": "^18.2.0",
    "autoprefixer": "^10.4.0",
    "dotenv-cli": "^8.0.0",
    "eslint": "8.57.1",
    "eslint-config-next": "15.4.1",
    "http-server": "^14.1.1",
    "openapi-typescript-codegen": "^0.29.0",
    "pino-pretty": "^13.0.0",
    "postcss": "^8.4.0",
    "prisma": "^6.13.0",
    "prisma-zod-generator": "^1.9.1",
    "tailwindcss": "^3.4.0",
    "tsx": "^4.20.3",
    "typescript": "^5.3.0"
  }
}
